import { useState, useEffect } from "react";
import { useParams, Link, useNavigate } from "react-router-dom";
import { ArrowLeft, Trophy, RefreshCw, Sparkles, Brain } from "lucide-react";
import { useToast } from "@/hooks/use-toast";
import Header from "@/components/Header";
import Footer from "@/components/Footer";
import PromptInput from "@/components/PromptInput";
import ResultDisplay from "@/components/ResultDisplay";
import ProgressTracker from "@/components/ProgressTracker";
import {
  GoogleGenerativeAI,
  HarmCategory,
  HarmBlockThreshold,
} from "@google/generative-ai";

// Initialize Gemini API
const apiKey = import.meta.env.VITE_GEMINI_API_KEY;
const genAI = new GoogleGenerativeAI(apiKey);

const model = genAI.getGenerativeModel({
  model: "gemini-2.0-flash",
});

const generationConfig = {
  temperature: 1,
  topP: 0.95,
  topK: 40,
  maxOutputTokens: 8192,
  responseModalities: [],
  responseMimeType: "text/plain",
};

// Mock challenge data - in a real app, this would come from an API
const challengeData = {
  "1": {
    id: "1",
    title: "Generate a Creative Story",
    description:
      "Learn how to craft prompts that generate engaging creative stories with specific themes and characters.",
    difficulty: "beginner" as const,
    steps: [
      {
        stepNumber: 1,
        goalDescription:
          "Create a prompt that generates a short story about a time traveler visiting ancient Egypt. The story should include a plot twist and be suitable for a young adult audience.",
        examplePrompt:
          "Write a short story about a time traveler who accidentally lands in ancient Egypt during the construction of the pyramids. Include a surprising plot twist at the end. The story should be exciting and suitable for young adult readers.",
        targetResponse:
          "The sun beat down mercilessly as Maya's time pod malfunctioned, leaving her stranded in ancient Egypt circa 2500 BCE. The Great Pyramid of Giza was only half-constructed, its limestone blocks gleaming white in the desert sun.\n\nDisguising her modern clothing with a worker's tunic she'd stolen from a washing line, Maya infiltrated the construction site, hoping to find materials to repair her pod. The overseer, a stern man named Khufu, took notice of her unusual knowledge and assigned her to the architectural team.\n\nFor weeks, Maya worked alongside the Egyptians, marveling at their ingenuity. She formed a friendship with a scribe named Imhotep, who shared the pharaoh's plans for the afterlife.\n\n\"The chambers are designed to guide the pharaoh to the stars,\" Imhotep explained.\n\nOne night, Maya discovered hieroglyphs that didn't match the period. They depicted her time pod and contained technical specifications for interstellar travel. With a shock, she realized the truth: The Egyptians weren't building a tomb—they were constructing a launch site for their own time travel experiments.\n\nWhen she finally repaired her pod, Imhotep wasn't surprised. \"We've been waiting for someone like you for centuries,\" he said, revealing a small device identical to her own. \"You aren't the first traveler to visit us, and we've learned from each one. Safe journey home—or perhaps I should say, forward.\"\n\nAs Maya's pod dematerialized, she understood the greatest archaeological mystery in history: the pyramids weren't tombs at all, but humanity's first attempt to reach the stars.",
        hints: [
          "Include specific details about the time period and setting.",
          "Make sure to specify the target audience in your prompt.",
          "Ask for a specific plot element (the twist) to make the story more engaging.",
        ],
      },
      {
        stepNumber: 2,
        goalDescription:
          "Create a prompt that generates a short fantasy story about a magical forest with mythical creatures. The story should have a moral lesson and be targeted at middle-grade readers.",
        examplePrompt:
          "Write a fantasy story about a child who discovers a hidden magical forest filled with mythical creatures like unicorns and fairies. The story should include a moral lesson about respecting nature and be suitable for middle-grade readers (ages 8-12). Keep the tone whimsical but include one moment of tension or conflict.",
        targetResponse:
          'Eliot had been warned never to venture into Whisperleaf Woods after sunset, but the strange blue light dancing between the trees was too tempting to ignore.\n\nSlipping past the ancient oak that marked the forest boundary, Eliot followed the pulsing glow deeper into the woods. The usual forest sounds—chirping crickets, hooting owls—fell silent, replaced by what sounded almost like... singing?\n\n"You\'re late," came a voice, sharp and clear. A small figure, no taller than Eliot\'s knee, stepped out from behind a mushroom that definitely hadn\'t been large enough to hide behind. The creature had pointed ears and eyes that shifted colors like opals catching light.\n\n"I... I wasn\'t aware I was expected," Eliot stammered.\n\nThe fairy—for that\'s what she must be—rolled her eyes. "All humans say that. Yet you\'re drawn here all the same when the Moonbloom flowers open. Come, the Council awaits."\n\nEliot followed the fairy to a clearing where the trees formed a perfect circle. Creatures from storybooks filled the space: centaurs with bows strapped to their backs, foxes with multiple tails, miniature dragons perched on branches, and a majestic unicorn whose horn spiraled up like twisted glass.\n\n"Another human child," announced a centaur with a chestnut coat. "Perhaps this one will listen."\n\nThe unicorn stepped forward, its hooves leaving tiny glowing prints in the moss. "Our forest is dying, young one. The river that feeds our magic runs polluted with your kind\'s waste. The Moonblooms bloom fewer each year."\n\nEliot noticed then what had been missed before—the dullness in the creatures\' coats, the wilting flowers, the thinning trees.\n\n"What can I do?" Eliot asked. "I\'m just a kid."\n\nThe fairy from before landed on Eliot\'s shoulder. "Children see what adults forget to look for. Children believe what adults refuse to accept. Children act when adults hesitate."\n\nThat night, Eliot learned about the delicate balance of the magical ecosystem—how the unicorns\' horns purified water, how fairy dust helped plants grow, how dragon breath kept invasive insects at bay.\n\nBefore dawn, Eliot made a promise to the Council: to organize a creek cleanup, to plant native species along the forest edge, to convince the town to reduce its plastic usage.\n\n"Small actions," the unicorn told Eliot, touching its horn gently to the child\'s forehead, "create great changes when done with pure intent."\n\nEliot left Whisperleaf Woods with a sprinkling of fairy dust in one pocket and a dragon scale in the other—reminders of a promise made.\n\nThree months later, when Eliot returned with news of the successful creek cleanup, the Moonblooms were growing again, their blue light stronger than before. The forest welcomed Eliot not as a visitor, but as a guardian.\n\nSometimes the most magical power isn\'t found in spells or enchanted creatures, but in the simple choice to care for the world around us.',
        hints: [
          "Specify the target age range in your prompt.",
          "Request a specific moral lesson or theme.",
          "Ask for particular creatures or magical elements to appear in the story.",
        ],
      },
      {
        stepNumber: 3,
        goalDescription:
          "Create a prompt that generates a science fiction story set on a space colony. The story should explore themes of isolation and community, and include futuristic technology that plays a key role in the plot.",
        examplePrompt:
          "Write a science fiction story set on humanity's first Mars colony in the year 2150. The story should follow a young engineer who discovers a flaw in the colony's life support system that no one else has noticed. Include themes of isolation, community responsibility, and the relationship between humans and technology. The story should feature futuristic technology that's plausible and plays a crucial role in resolving the conflict.",
        targetResponse:
          'Ria Patel moved her hand through the holographic overlay of Mars Colony Artemis\'s life support systems, the red and green indicators flowing around her fingers like digital currents. At twenty-six, she was the youngest environmental systems engineer on the colony, which either meant she was brilliant or they were desperate. Probably both.\n\n"Sixteen months on this red dustball," Ria muttered to herself, rotating a 3D segment of oxygen recyclers in the virtual interface projected from her wrist terminal. "And I\'m talking to myself again."\n\nThe colony housed 183 people—scientists, engineers, agricultural specialists, medical personnel—humanity\'s first permanent settlement beyond Earth. Their habitation modules formed a spiral pattern across the rust-colored landscape, connected by enclosed walkways that extended from the central Hub like spokes on a wheel.\n\nRia\'s quarters, like everyone else\'s, measured exactly twelve square meters. Minimal physical possessions, maximum digital storage. Efficient. Logical. Lonely.\n\nIt was during her routine maintenance review that she first noticed it—an anomalous pattern in the CO2 scrubbing system. Not an emergency, not even a warning. Just...odd. A fractional efficiency decrease in Module 7, where the agricultural labs were located.\n\n"Computer, historical comparison of Module 7 atmospheric processing, three-month visualization," Ria commanded.\n\nThe air in front of her filled with a time-lapse graph. There it was—a subtle but persistent downward trend, so gradual that the automated systems hadn\'t flagged it.\n\nRia brought her findings to Director Chen during the weekly systems meeting. The older woman frowned at the projection.\n\n"It\'s within acceptable parameters, Engineer Patel. Perhaps you\'re being overcautious."\n\n"With respect, Director, acceptable now doesn\'t mean acceptable three months from now. The pattern suggests—"\n\n"We have pressing concerns with the water reclamation system in Module 3. Focus your attention there."\n\nRia nodded stiffly. "Yes, Director."\n\nThe dismissal stung, but Mars had taught her patience. That night, she programmed her personal nanobots—technically against protocol for off-duty use—to collect additional data from Module 7 during her sleep cycle.\n\nThe next morning, her terminal pulsed with findings. The nanobots had detected microscopic fractures in Module 7\'s external shell, too small for standard sensors to identify. During Martian nights, when the temperature plummeted to minus 100 degrees Celsius, the fractures contracted. During the day, they expanded. Each cycle released infinitesimal amounts of oxygen into the thin Martian atmosphere.\n\nRia ran a projection. In approximately four months, the cumulative loss would exceed the colony\'s ability to regenerate oxygen fast enough.\n\nShe compiled her evidence and sent it directly to the entire engineering department. Responses ranged from dismissive to hostile—resources were already stretched thin, her methodology was unorthodox, her conclusions alarmist.\n\nOnly one person responded differently: Dr. Alejandro Reyes, the colony\'s materials scientist.\n\n"I\'ve been working on something that might help," he told her over a shared meal of hydroponically grown vegetables and lab-cultured protein. "Self-healing polymerics. They\'re not approved for structural applications yet, but..."\n\n"But neither is oxygen deficiency," Ria finished.\n\nThey worked in secret for weeks, modifying Ria\'s nanobots to deliver Alejandro\'s experimental polymer to the microscopic fractures. The bots would need to work in coordination, forming a lattice across the affected areas while simultaneously applying the compound.\n\n"It\'s never been tested on this scale," Alejandro warned as they finalized the programming.\n\n"Mars is all about firsts," Ria replied, trying to sound more confident than she felt.\n\nWhen they deployed their solution, the entire colony gathered in the Hub to watch the exterior cameras. At first, nothing seemed to happen. Then, a subtle shimmer appeared across Module 7\'s surface as thousands of nanobots moved in perfect synchrony, weaving the self-healing polymer into the structure itself.\n\nThree days later, Ria\'s monitors showed the oxygen levels stabilizing. A week after that, efficiency increased beyond the original baseline.\n\nDirector Chen called Ria and Alejandro to her office. Ria expected a reprimand for circumventing proper channels. Instead, the Director\'s usual stern expression had softened.\n\n"Sometimes," Chen said, "I forget that we\'re not just surviving here. We\'re learning how to live differently. How to see problems differently." She gestured toward the window, where the rust-colored horizon stretched endlessly. "Isolation makes us cautious, sometimes too cautious. Community makes us brave."\n\nThe Director looked directly at Ria. "Your nanobot delivery system and Dr. Reyes\'s polymer will be implemented across all modules, with full credit to both of you. And I\'ll be recommending a review of our anomaly detection parameters."\n\nSix months later, Ria stood in the newly constructed observation dome—built with the polymer-enhanced materials now known colony-wide as the Patel-Reyes Composite. Around her, other colonists pointed at constellations or the distant Earth, a blue pinprick in the black sky.\n\nAlejandro joined her at the railing. "Not bad for a couple of troublemakers," he said.\n\nRia smiled, watching her breath fog slightly on the dome\'s interior. Visible breath—a small thing that reminded her they were all, every day, creating something that hadn\'t existed before: an atmosphere of their own making, in more ways than one.\n\n"On Mars," she replied, "the troublemakers are the ones who keep us breathing."',
        hints: [
          "Include a specific time period or setting detail in your prompt.",
          "Request exploration of particular themes or philosophical questions.",
          "Ask for technological elements that drive the plot forward.",
        ],
      },
    ],
    totalSteps: 3,
  },
  "2": {
    id: "2",
    title: "Create Accurate Summaries",
    description:
      "Master the art of writing prompts that produce concise, accurate summaries of complex information.",
    difficulty: "beginner" as const,
    steps: [
      {
        stepNumber: 1,
        goalDescription:
          "Write a prompt that generates a clear, concise summary of quantum computing that a high school student could understand.",
        examplePrompt:
          "Explain quantum computing in a concise summary that a high school student could understand. Cover the basic principles, how it differs from classical computing, and potential applications. Use simple analogies where helpful, and limit the explanation to 3-4 paragraphs.",
        targetResponse:
          'Quantum computing is a type of computing that uses quantum physics to solve problems too complex for regular computers. While classical computers use bits (0s and 1s) to process information, quantum computers use quantum bits or "qubits" which can exist in multiple states at once—kind of like being able to be both heads and tails simultaneously when flipping a coin.\n\nThis special property, called "superposition," allows quantum computers to process vast amounts of information simultaneously. Another quantum property called "entanglement" lets qubits be connected in ways that classical bits can\'t, creating computational shortcuts. It\'s like having telepathic coins where flipping one instantly affects the other, no matter how far apart they are.\n\nQuantum computers excel at specific tasks like cracking complex codes, simulating molecules for drug discovery, optimizing logistics, and solving complex mathematical problems. However, they\'re not replacements for everyday computing—they\'re specialized tools for specific complex problems.\n\nWhile fully practical quantum computers are still being developed, they represent the next giant leap in computing power. When fully realized, they could solve problems in minutes that would take classical computers millions of years to crack.',
        hints: [
          "Specify the target audience (high school students) in your prompt.",
          "Ask for analogies to help explain complex concepts.",
          "Request a specific length or format for the summary.",
        ],
      },
      {
        stepNumber: 2,
        goalDescription:
          "Create a prompt that generates a clear summary of climate change causes and impacts for a middle school science class.",
        examplePrompt:
          "Write a summary of climate change that would be appropriate for a middle school science class. Explain the main causes of climate change, its major environmental impacts, and how it affects human communities. Use clear, age-appropriate language and helpful comparisons. Include 2-3 key facts with numbers. Keep the summary to 4-5 paragraphs and maintain a factual, educational tone without being overwhelming.",
        targetResponse:
          "Climate change refers to long-term shifts in temperatures and weather patterns across our planet. While these changes can occur naturally, since the 1800s, human activities have been the main driver of climate change, primarily due to burning fossil fuels like coal, oil, and gas, which produces heat-trapping gases.\n\nWhen we burn fossil fuels in our cars, factories, and power plants, we release greenhouse gases (mainly carbon dioxide) into the atmosphere. These gases work like a blanket around Earth – they let sunlight in but trap heat that would normally escape back to space. This is called the greenhouse effect. Since the Industrial Revolution began around 1750, carbon dioxide levels have increased by nearly 50%, reaching levels not seen in 2 million years.\n\nThe effects of climate change are already visible and widespread. Global temperatures have risen about 1.1°C (2°F) since the late 1800s, causing polar ice and glaciers to melt. This melting ice has contributed to sea levels rising about 8-9 inches since 1880, and the rate is accelerating. Weather patterns are becoming more extreme, with some places experiencing more intense droughts while others face stronger hurricanes and heavier rainfall than in the past.\n\nClimate change affects ecosystems and wildlife too. Many animals are migrating to cooler areas or changing their seasonal behaviors, but some species can't adapt quickly enough. Coral reefs, which are home to 25% of all marine life, are dying as oceans get warmer and more acidic. Scientists estimate that 70-90% of coral reefs could disappear in the next 20 years if warming continues at the current rate.\n\nHuman communities are also feeling the impacts of climate change. Some coastal cities regularly experience flooding during high tides. Farmers in many regions face changing growing seasons and more frequent crop failures due to unusual weather. Public health is affected too, as heat waves become more common and disease-carrying insects spread to new areas. While these challenges are serious, scientists agree that by reducing greenhouse gas emissions and adapting to changes that are already happening, we can avoid the worst impacts of climate change.",
        hints: [
          "Specify the age group or grade level in your prompt.",
          "Request specific details about the length and tone.",
          "Ask for statistics or numerical facts to support the explanation.",
        ],
      },
      {
        stepNumber: 3,
        goalDescription:
          "Create a prompt that generates a concise explanation of how artificial intelligence works for business professionals with no technical background.",
        examplePrompt:
          "Write a clear, jargon-free explanation of how modern artificial intelligence systems work for business professionals with no technical background. Focus on the fundamental concepts of machine learning, neural networks, and how AI 'learns' from data. Use business-relevant analogies and examples that non-technical readers would understand. Keep the explanation under 5 paragraphs and include a brief mention of common business applications of AI without getting into technical details.",
        targetResponse:
          "Artificial intelligence (AI) at its core is technology that enables computers to perform tasks that typically require human intelligence. Rather than being explicitly programmed with specific instructions for every situation, modern AI systems learn patterns from data—much like how a new employee might learn from examples and experience rather than following a rigid handbook.\n\nThe foundation of today's AI is machine learning, which is comparable to how your video streaming service learns your preferences. When you watch certain shows or movies, the system notes these choices and recognizes patterns to recommend similar content. Similarly, AI systems analyze thousands or millions of examples to identify patterns and make predictions or decisions based on new information they encounter.\n\nNeural networks, a powerful type of machine learning, are inspired by the human brain's structure. Imagine a large company where information passes through multiple departments before reaching a decision. In a neural network, data flows through interconnected layers that each extract and process different features of the information, transforming raw input (like customer data) into meaningful output (like purchase predictions). The system adjusts its internal connections based on whether its predictions are correct, gradually improving its accuracy.\n\nFor instance, when an AI system learns to identify potential sales opportunities, it isn't programmed with a specific rule like \"if a customer visits the pricing page three times, they're ready to buy.\" Instead, it analyzes thousands of historical customer journeys, learning which behavioral patterns most often led to purchases. The AI might discover complex combinations of behaviors that human analysts would never notice, such as specific sequences of page visits combined with time-of-day patterns and product comparison activities.\n\nBusiness applications of AI are already widespread and diverse. Customer service chatbots can handle routine inquiries while routing complex issues to human agents. Predictive analytics tools forecast market trends and customer behaviors to inform strategic decisions. AI-powered tools can analyze contracts and other documents in minutes rather than the hours it would take human reviewers. And in marketing, AI helps personalize communications at scale, ensuring each customer receives the most relevant content. The key advantage in all these applications is that AI can process and find patterns in vast amounts of data far beyond what would be practical for human analysis.",
        hints: [
          "Specify the target audience (business professionals) in your prompt.",
          "Request business-relevant examples or analogies.",
          "Ask for a specific length and jargon-free language.",
        ],
      },
    ],
    totalSteps: 3,
  },
  "3": {
    id: "3",
    title: "Design Specific Instructions",
    description:
      "Learn how to structure step-by-step instructions that get AI to follow specific procedures exactly.",
    difficulty: "intermediate" as const,
    steps: [
      {
        stepNumber: 1,
        goalDescription:
          "Create a prompt that generates clear step-by-step instructions for setting up a home workout routine for beginners with no equipment.",
        examplePrompt:
          "Write step-by-step instructions for creating a beginner-friendly home workout routine that requires no equipment. Include specific exercises with repetition counts, rest periods, and a weekly schedule. The routine should be appropriate for someone with no fitness experience. Format each step with a number and a clear action. Include safety precautions and tips for proper form in a separate section at the end.",
        targetResponse:
          "# Setting Up a Beginner Home Workout Routine (No Equipment)\n\n## Initial Assessment\n\n1. Find an open space in your home with enough room to lie down and extend your arms in all directions.\n2. Set aside 20-30 minutes for your workout, 3 times per week (Monday, Wednesday, Friday).\n3. Wear comfortable clothing that allows free movement and supportive athletic shoes.\n4. Have water available and a towel nearby.\n5. Take a 5-minute test where you do as many of each exercise as possible with good form: push-ups (from knees if needed), squats, and jumping jacks.\n\n## Creating Your Routine\n\n1. Start with a 5-minute warm-up: march in place for 1 minute, 20 arm circles forward and backward, 20 shoulder rolls, and high knees for 1 minute.\n2. Perform the following circuit, starting with 8-10 repetitions of each exercise:\n   a. Modified push-ups (from knees)\n   b. Bodyweight squats\n   c. Stationary lunges (8-10 per leg)\n   d. Glute bridges\n   e. Mountain climbers (30 seconds)\n3. Rest for 60-90 seconds between exercises when starting out.\n4. After completing all exercises once, rest for 2 minutes.\n5. Repeat the circuit 2-3 times total.\n6. End with a 5-minute cool-down: gentle stretches holding each for 20-30 seconds (hamstrings, quadriceps, chest, shoulders, and back).\n\n## Weekly Schedule\n\n1. Monday: Full circuit workout\n2. Tuesday: Rest or light activity (walking)\n3. Wednesday: Full circuit workout\n4. Thursday: Rest or light activity (walking)\n5. Friday: Full circuit workout\n6. Saturday/Sunday: One active recovery day (light walking) and one complete rest day\n\n## Progressive Overload Plan\n\n1. Weeks 1-2: Focus on learning proper form with fewer repetitions (8-10).\n2. Weeks 3-4: Increase repetitions to 12-15 per exercise.\n3. Weeks 5-6: Reduce rest periods between exercises to 45-60 seconds.\n4. Weeks 7-8: Add a 4th circuit or increase to 4 workout days per week.\n\n## Safety Precautions & Form Tips\n\n* Stop any exercise that causes sharp or sudden pain.\n* Breathe consistently during exercises – exhale during exertion, inhale during release.\n* For push-ups: keep your core tight, back flat, and elbows at a 45-degree angle from your body.\n* For squats: keep weight in your heels, knees tracking over (not beyond) toes, and maintain a neutral spine.\n* For lunges: step forward far enough that your front knee forms a 90-degree angle without extending beyond your toes.\n* For glute bridges: keep your core engaged and focus on squeezing your glutes at the top of the movement.\n* If you feel dizzy or extremely fatigued, rest longer between exercises or reduce the intensity.\n\nRemember that consistency is more important than intensity when starting out. It's better to complete an easier workout three times per week than to do one intense workout and be too sore to continue.",
        hints: [
          "Request a specific format for the instructions (numbered steps, bullet points, etc.)",
          "Ask for details about frequency, duration, and intensity of the exercises.",
          "Specify that safety precautions should be included.",
        ],
      },
      {
        stepNumber: 2,
        goalDescription:
          "Create a prompt that generates detailed instructions for planning and cooking a three-course meal for a dinner party.",
        examplePrompt:
          "Provide detailed step-by-step instructions for planning and preparing a three-course dinner party meal (appetizer, main course, and dessert) for 6 people. The menu should use seasonal ingredients and include one vegetarian option. Include a timeline starting 3 days before the event, a shopping list organized by grocery store section, preparation instructions for each dish, and plating/presentation tips. Also include suggestions for appropriate drink pairings and advice for accommodating common dietary restrictions.",
        targetResponse:
          "# Complete Guide: Three-Course Dinner Party for Six\n\n## Menu Overview\n- **Appetizer**: Roasted Beet & Goat Cheese Tart with Arugula\n- **Main Course**: Herb-Crusted Rack of Lamb with Rosemary Fingerling Potatoes and Glazed Carrots\n- **Vegetarian Main Option**: Stuffed Portobello Mushrooms with Quinoa, Spinach and Feta\n- **Dessert**: Lemon Panna Cotta with Seasonal Berry Compote\n\n## Timeline\n\n### 3 Days Before\n1. Finalize menu and check for any guest dietary restrictions.\n2. Create complete shopping list.\n3. Check pantry for staples (olive oil, salt, pepper, flour, sugar, etc.).\n4. Ensure you have necessary cookware and serving dishes.\n5. Plan table setting and decor.\n\n### 2 Days Before\n1. Complete grocery shopping (use the organized list below).\n2. Purchase wine/beverages.\n3. Prepare lemon panna cotta (it needs 24+ hours to set).\n4. Make berry compote and refrigerate separately from panna cotta.\n5. Prepare any homemade stocks if using for recipes.\n\n### 1 Day Before\n1. Wash and prep all vegetables (store properly in refrigerator).\n2. Prepare pastry dough for beet tart and refrigerate.\n3. Marinate rack of lamb (if using marinade).\n4. Prepare any make-ahead sauces or dressings.\n5. Set the table and prepare serving dishes.\n\n### Day of Event\n#### Morning\n1. Remove lamb from refrigerator 1-2 hours before cooking to come to room temperature.\n2. Par-boil fingerling potatoes, cool and refrigerate.\n3. Prepare filling for mushrooms and refrigerate.\n4. Blind bake tart shell and let cool.\n\n#### 3 Hours Before\n1. Roast beets for tart.\n2. Prepare herb crust for lamb.\n3. Stuff mushrooms but don't bake yet.\n\n#### 1-2 Hours Before\n1. Preheat oven for lamb and mushrooms.\n2. Assemble beet tart but don't add arugula yet.\n3. Season and prepare potatoes and carrots for roasting.\n\n#### Final Hour\n1. Cook lamb to desired temperature (25-30 min for medium-rare).\n2. Bake stuffed mushrooms alongside lamb (25 min).\n3. Roast potatoes and carrots.\n4. Rest lamb for 10-15 minutes before carving.\n5. Add fresh arugula to beet tart just before serving.\n6. Remove panna cotta from refrigerator 15 minutes before serving.\n\n## Shopping List\n\n### Produce\n- 6 medium beets\n- 2 large bunches arugula\n- 3 lbs fingerling potatoes\n- 2 lbs rainbow carrots\n- 6 large portobello mushroom caps\n- 1 bag fresh spinach\n- 1 bunch fresh rosemary\n- 1 bunch fresh thyme\n- 1 bunch fresh mint (for dessert)\n- 4 lemons\n- 2 heads garlic\n- 2 shallots\n- 1 pint each: strawberries, blueberries, raspberries (or seasonal berries)\n\n### Meat & Dairy\n- 2 racks of lamb (8 ribs each)\n- 8 oz goat cheese\n- 8 oz feta cheese\n- 2 cups heavy cream\n- 1 cup plain Greek yogurt\n- 4 oz butter\n- 6 eggs\n\n### Grocery\n- 1 cup quinoa\n- 2 sheets puff pastry (or ingredients for pastry dough)\n- 1/2 cup panko breadcrumbs\n- 1/4 cup Dijon mustard\n- Honey\n- Vanilla extract\n- Gelatin sheets or powder\n- Balsamic vinegar\n- Extra virgin olive oil\n\n### Wine & Beverages\n- Sparkling water\n- 1 bottle crisp white wine (e.g., Sauvignon Blanc)\n- 1 bottle medium-bodied red wine (e.g., Pinot Noir)\n- 1 bottle dessert wine (optional)\n\n## Drink Pairings\n- **Appetizer**: Sauvignon Blanc or a dry Riesling complements the earthiness of beets and tanginess of goat cheese\n- **Main Course**: Pinot Noir or Syrah pairs well with lamb; for the vegetarian option, a light-bodied Chardonnay\n- **Dessert**: Moscato d'Asti or a late harvest Riesling with the panna cotta, or offer coffee/tea\n\n## Accommodating Dietary Restrictions\n\n### Gluten-Free\n- Use gluten-free pastry for the tart or create a potato crust alternative\n- Ensure breadcrumbs for herb crust are gluten-free\n- Verify any store-bought stocks or sauces are gluten-free\n\n### Dairy-Free\n- Replace goat cheese and feta with dairy-free alternatives\n- For panna cotta, use full-fat coconut milk and agar-agar instead of cream and gelatin\n- Use olive oil instead of butter for roasting vegetables\n\n### Vegan\n- Beyond the mushroom main course, ensure vegetable sides are prepared with olive oil instead of butter\n- Offer a fruit-based dessert alternative like poached pears with sorbet\n\n## Plating & Presentation\n\n### Appetizer\n- Serve individual tart portions on small plates with a light arugula salad\n- Drizzle with reduced balsamic and extra virgin olive oil\n- Garnish with fresh herbs and cracked black pepper\n\n### Main Course\n- Use large, warmed dinner plates\n- Place sliced lamb (2-3 ribs per person) at 10 o'clock position\n- Position fingerling potatoes at 2 o'clock\n- Arrange glazed carrots at 6 o'clock\n- Drizzle sauce in an artistic pattern around the plate, not over the food\n- For vegetarian option, place stuffed mushroom in center with vegetables arranged around it\n\n### Dessert\n- Use chilled dessert plates or shallow bowls\n- Place panna cotta slightly off-center\n- Spoon berry compote alongside, not on top\n- Garnish with mint leaf and a light dusting of powdered sugar\n- Add a thin cookie or tuile for texture contrast (optional)",
        hints: [
          "Ask for a clear timeline with specific preparation schedules.",
          "Request a comprehensive shopping list organized by store section.",
          "Specify that drink pairings and dietary accommodations should be included.",
        ],
      },
      {
        stepNumber: 3,
        goalDescription:
          "Create a prompt that generates a comprehensive guide for organizing and conducting a successful virtual team-building event.",
        examplePrompt:
          "Write a detailed guide for planning and hosting a virtual team-building event for a remote team of 15-20 people who work in different time zones. Include sections on selecting appropriate activities based on team dynamics, technical setup requirements, pre-event preparation, facilitation tips during the event, and post-event follow-up. Provide at least three specific activity suggestions with detailed instructions, estimated time requirements, and required materials or software. Also include best practices for encouraging participation from introverted team members and troubleshooting common technical issues.",
        targetResponse:
          '# Comprehensive Guide: Virtual Team-Building for Remote Teams\n\n## Planning Your Virtual Team-Building Event\n\n### Understanding Your Team\n1. **Survey team members** to gather preferences and availability across time zones\n   - Use a scheduling tool like Doodle or When2Meet\n   - Ask about interests, comfort with technology, and previous team-building experiences\n   - Identify any accessibility needs\n\n2. **Select an optimal time slot** considering all time zones\n   - Aim for reasonable hours in all locations (9am-6pm local time)\n   - Consider rotating times for recurring events to share the burden of odd hours\n   - Block 90-120 minutes for the core event\n\n3. **Set clear objectives** for the session\n   - Define 1-2 specific goals (e.g., improving communication, celebrating achievements, skill sharing)\n   - Communicate these goals to participants in advance\n   - Plan to measure success through post-event feedback\n\n## Technical Setup and Preparation\n\n### Platform Selection\n1. **Choose a primary video conferencing platform**\n   - Zoom: Best for larger groups and breakout rooms\n   - Microsoft Teams: Good integration with Microsoft ecosystem\n   - Google Meet: Simple interface with Google Workspace integration\n\n2. **Select complementary tools**\n   - Collaborative whiteboard (Miro, Mural)\n   - Polling and quiz tools (Mentimeter, Kahoot)\n   - Project management tools for asynchronous components (Trello, Asana)\n\n### Technical Preparation\n1. **Create a technical setup guide** for participants\n   - Required software installation steps\n   - Recommended device and internet specifications\n   - Audio/video testing procedures\n   - Backup plans for technical issues\n\n2. **Conduct a dry run**\n   - Test all activities with 2-3 team members\n   - Practice screen sharing and breakout room management\n   - Identify potential technical challenges\n\n3. **Prepare a digital welcome package**\n   - Agenda with clear timeline\n   - Links to all required platforms\n   - Any materials participants should prepare\n   - List of items to have on hand (paper, pen, specific household objects)\n\n## Facilitation Guidelines\n\n### Before the Event\n1. **Send calendar invites** with all necessary information\n   - Include 10-minute buffer for joining and technical setup\n   - Attach or link to the welcome package\n   - Send reminder 24 hours before with any last-minute instructions\n\n2. **Prepare facilitators**\n   - Assign clear roles (main facilitator, technical support, chat monitor)\n   - Create a private back-channel for the facilitation team\n   - Prepare script and timing cues\n\n### During the Event\n1. **Start with energy and clarity**\n   - Begin with a welcome and brief introduction\n   - Review the agenda and objectives\n   - Set ground rules (mute/unmute protocol, how to ask questions)\n\n2. **Maintain engagement**\n   - Call on specific people to share thoughts (with advance notice)\n   - Use the chat function strategically\n   - Incorporate frequent changes in activity type (listening, speaking, collaborating)\n   - Take short breaks every 45 minutes\n\n3. **Encourage equal participation**\n   - Use round-robin techniques\n   - Employ small breakout groups (3-4 people) for deeper discussions\n   - Create space for written contributions for those less comfortable speaking\n\n4. **Handle technical issues gracefully**\n   - Have a dedicated technical troubleshooter\n   - Prepare alternative activities if planned activities face technical difficulties\n   - Stay positive and flexible\n\n### Supporting Introverted Team Members\n1. **Provide advance notice** when someone will be called upon to speak\n2. **Offer alternative participation methods** (chat, collaborative documents)\n3. **Use structured sharing formats** with clear expectations\n4. **Create smaller breakout discussions** where quieter voices can emerge\n5. **Follow up individually** to gather additional thoughts post-event\n\n## Featured Activities\n\n### Activity 1: "Virtual Team Map" (30 minutes)\n**Objective:** Build team connection and understanding of diverse work contexts\n\n**Materials Needed:**\n- Miro or Mural digital whiteboard (alternative: Google Jamboard)\n- World map template\n- Digital sticky notes in various colors\n\n**Instructions:**\n1. Create a shared digital whiteboard with a world map\n2. Ask each participant to place a digital sticky note on their location\n3. On their sticky note, team members should include:\n   - Name and role\n   - Local time\n   - One challenge of working in their location\n   - One benefit of working in their location\n   - A photo of their workspace or view (optional)\n4. Give everyone 10 minutes to complete their sticky notes\n5. Spend 15 minutes having each person share briefly about their location\n6. Conclude with a discussion about how the team can better leverage time zone diversity\n\n**Facilitation Tips:**\n- Prepare the template in advance with an example\n- Address any privacy concerns by making photos optional\n- Note patterns and insights to reference in future team discussions\n\n### Activity 2: "Problem-Solving Puzzle Race" (45 minutes)\n**Objective:** Foster collaboration and creative problem-solving\n\n**Materials Needed:**\n- Zoom breakout rooms or equivalent\n- Digital escape room platform (e.g., Virtual Escape Room, Puzzle Break)\n- Alternative: Create your own puzzles using Google Forms\n\n**Instructions:**\n1. Divide participants into teams of 4-5 people\n2. Explain that teams will compete to solve a series of puzzles related to your organization or industry\n3. Send teams to breakout rooms with the first puzzle link\n4. Each solved puzzle provides a clue or password to access the next challenge\n5. Puzzles can include:\n   - Decoding a message using a cipher\n   - Identifying patterns in data\n   - Recognizing obscured images of company products/locations\n   - Answering trivia about company history or industry\n6. After 30 minutes of puzzle-solving, bring everyone back to share strategies\n7. Recognize the winning team and highlight effective collaboration techniques observed\n\n**Facilitation Tips:**\n- Ensure puzzles are challenging but solvable\n- Provide hints after 10 minutes if teams are stuck\n- Consider team composition to balance skills and personalities\n- Have a backup plan if the main puzzle platform has technical issues\n\n### Activity 3: "Skill-Share Roulette" (60 minutes)\n**Objective:** Knowledge exchange and appreciation of diverse team talents\n\n**Materials Needed:**\n- Random name selector tool (e.g., Wheel of Names website)\n- Timer\n- Shared document for notes\n\n**Instructions:**\n1. Before the event, ask each participant to prepare a 3-minute micro-workshop on a skill they possess (professional or personal)\n2. Examples:\n   - A keyboard shortcut that saves time\n   - A productivity technique\n   - A stretch routine for desk workers\n   - A cooking hack\n3. During the event, use a random selector to determine presentation order\n4. Each person presents their skill in 3 minutes or less\n5. Allow 2 minutes for questions after each presentation\n6. Document all skills shared in a team resource document\n7. Conclude by discussing which skills people plan to adopt\n\n**Facilitation Tips:**\n- Send examples in advance to help people identify teachable skills\n- Keep timing strict to maintain energy\n- Encourage positive reinforcement after each sharing\n- For larger groups, consider using breakout rooms with 6-7 people per room\n\n## Troubleshooting Common Technical Issues\n\n### Connection Problems\n1. **Prepare troubleshooting instructions** for common issues:\n   - Audio not working: Check mute button, computer audio settings, headset connection\n   - Video problems: Update browser/application, check camera privacy settings\n   - Connectivity issues: Suggest turning off video, closing other applications, moving closer to router\n\n2. **Create a backup plan** for various scenarios:\n   - Main platform failure: Have alternative meeting link ready\n   - Individual disconnections: Record session or assign a note-taker\n   - Widespread internet issues: Have asynchronous activities prepared\n\n## Post-Event Follow-Up\n\n1. **Send a thank-you message** within 24 hours\n   - Include highlights and key takeaways\n   - Share any relevant screenshots or outcomes\n   - Distribute recording if available (with permission)\n\n2. **Gather feedback** through a short survey\n   - Rate overall experience\n   - Identify most/least valuable elements\n   - Collect suggestions for future events\n\n3. **Create continuity**\n   - Share resources from the activities\n   - Establish follow-up actions or mini-challenges\n   - Schedule the next team-building session\n\n4. **Measure impact**\n   - Track team metrics before and after (communication frequency, collaboration tools usage)\n   - Note changes in team behavior during regular meetings\n   - Conduct a follow-up assessment after 2-4 weeks\n\n## Final Tips for Success\n\n- **Keep it voluntary** if possible, or include optional components\n- **Respect time boundaries** – start and end precisely as scheduled\n- **Focus on inclusion** over competition in most activities\n- **Celebrate participation** and contributions from all team members\n- **Iterate based on feedback** – each virtual team-building event should improve on the last\n\nRemember that successful virtual team building is an ongoing process, not a one-time event. The connections built during structured activities should be reinforced through day-to-day interactions and work practices.',
        hints: [
          "Request specific sections covering before, during, and after the event.",
          "Ask for detailed activity instructions that can be followed without additional research.",
          "Specify the need for troubleshooting advice for technical issues.",
        ],
      },
    ],
    totalSteps: 3,
  },
  "4": {
    id: "4",
    title: "Extract Structured Data",
    description:
      "Discover techniques for prompting AI to process text and extract specific data in structured formats.",
    difficulty: "intermediate" as const,
    steps: [
      {
        stepNumber: 1,
        goalDescription:
          "Create a prompt that extracts contact information from unstructured text into a structured format.",
        examplePrompt:
          "Extract all contact information from the text below into a structured JSON format. Include name, job title, company, email address, phone number, and physical address if available. If any field is missing, exclude it from the JSON rather than including empty values. Here's the text: [Your unstructured text with contact information]",
        targetResponse:
          '```json\n{\n  "contacts": [\n    {\n      "name": "John Smith",\n      "job_title": "Senior Marketing Director",\n      "company": "Horizon Technologies",\n      "email": "john.smith@horizontech.com",\n      "phone": "+1 (555) 123-4567",\n      "address": "123 Business Park, Suite 400, San Francisco, CA 94107"\n    },\n    {\n      "name": "Sarah Johnson",\n      "job_title": "Product Development Manager",\n      "company": "Horizon Technologies",\n      "email": "s.johnson@horizontech.com",\n      "phone": "+1 (555) 987-6543"\n    }\n  ]\n}\n```',
        hints: [
          "Specify the exact output format you want (JSON, CSV, etc.)",
          "Provide clear instructions about handling missing information.",
          "Include an example of the expected output structure, if possible.",
        ],
      },
      {
        stepNumber: 2,
        goalDescription:
          "Create a prompt that extracts key details from a research abstract into a structured summary.",
        examplePrompt:
          "Extract key information from the following research abstract into a structured format. Create a JSON object with the following fields: research_question, methodology, sample_size, key_findings (as an array), and limitations. Analyze the abstract thoroughly to identify all relevant information. If any information is not explicitly provided, label it as 'Not specified in abstract' rather than making assumptions. Here's the abstract: [Research abstract text]",
        targetResponse:
          '```json\n{\n  "research_question": "What is the impact of intermittent fasting on glucose metabolism and weight loss in adults with type 2 diabetes?",\n  "methodology": "Randomized controlled trial comparing 5:2 intermittent fasting protocol versus continuous calorie restriction over 12 months",\n  "sample_size": 116,\n  "key_findings": [\n    "Intermittent fasting group showed greater improvement in insulin sensitivity (p<0.01)",\n    "Similar weight loss was achieved in both groups (IF: 6.8kg vs CCR: 6.4kg, p=0.68)",\n    "Intermittent fasting led to greater reduction in diabetes medication requirements (56% vs 32%, p<0.05)",\n    "Adherence rates were similar between both dietary approaches (IF: 61%, CCR: 68%, p=0.23)"\n  ],\n  "limitations": "Single-center study with predominantly Caucasian participants; unable to determine effects beyond 12 months; possible confounding effects from changes in physical activity despite instructions to maintain consistent exercise habits"\n}\n```',
        hints: [
          "Specify that you want detailed extraction of information, not just identification of section headings.",
          "Ask for clear handling of missing information.",
          "Request specific formatting (like a bulleted list or JSON) for the output.",
        ],
      },
      {
        stepNumber: 3,
        goalDescription:
          "Create a prompt that analyzes a product review and extracts sentiment, features mentioned, and recommendation status.",
        examplePrompt:
          "Analyze the following product review and extract structured information from it. Create a JSON object that includes: 1) overall_sentiment (positive, negative, or mixed with a sentiment score from -10 to +10), 2) pros (array of positive features mentioned), 3) cons (array of negative features mentioned), 4) mentioned_features (array of all product features discussed, regardless of sentiment), 5) use_case (how the reviewer used the product), 6) would_recommend (boolean, true/false based on whether the reviewer explicitly or implicitly recommends the product), and 7) target_audience (who would benefit from this product according to the review). Here's the review: [Product review text]",
        targetResponse:
          '```json\n{\n  "overall_sentiment": {\n    "category": "mixed",\n    "score": 3\n  },\n  "pros": [\n    "Battery life exceeds advertised 10 hours",\n    "Display quality is excellent with vibrant colors",\n    "Lightweight and portable design",\n    "Fast charging capability"\n  ],\n  "cons": [\n    "Keyboard feels mushy and uncomfortable for long typing sessions",\n    "Runs hot under moderate workloads",\n    "Limited port selection requires dongles",\n    "Pre-installed software includes bloatware"\n  ],\n  "mentioned_features": [\n    "Battery",\n    "Display",\n    "Design",\n    "Charging speed",\n    "Keyboard",\n    "Thermal management",\n    "Ports/connectivity",\n    "Software",\n    "Performance",\n    "Price"\n  ],\n  "use_case": "College student using for note-taking, research papers, and media consumption",\n  "would_recommend": true,\n  "target_audience": "Students and casual users who prioritize portability and battery life over typing comfort and connectivity options"\n}\n```',
        hints: [
          "Specify that you want a numeric sentiment score as well as a category.",
          "Request extraction of both explicit information (directly stated) and implicit information (implied).",
          "Ask for categorization of features mentioned into distinct groups.",
        ],
      },
    ],
    totalSteps: 3,
  },
  "5": {
    id: "5",
    title: "Debug Code with AI",
    description:
      "Learn how to write effective prompts that help AI find and fix bugs in your code snippets.",
    difficulty: "advanced" as const,
    steps: [
      {
        stepNumber: 1,
        goalDescription:
          "Create a prompt that helps identify and fix a logic error in a JavaScript function.",
        examplePrompt:
          "Review the following JavaScript function that is supposed to find the mode (most frequent value) in an array of numbers. There's a logic error in the implementation. Identify the error, explain why it's not working correctly, and provide a fixed version of the function with comments explaining your changes. Additionally, provide a step-by-step explanation of how the fixed function works with a simple example like [1, 2, 2, 3, 3, 3, 4].\n\n```javascript\nfunction findMode(numbers) {\n  if (!numbers || numbers.length === 0) return null;\n  \n  const frequency = {};\n  let maxFrequency = 0;\n  let mode = null;\n  \n  for (const num of numbers) {\n    frequency[num] = frequency[num] ? frequency[num] + 1 : 1;\n    if (frequency[num] > maxFrequency) {\n      maxFrequency = frequency[num];\n      mode = num;\n    }\n  }\n  \n  return mode;\n}\n```",
        targetResponse:
          "## Logic Error Analysis\n\nThe function `findMode()` has a subtle logic error that can lead to incorrect results in certain scenarios. The main issue is that **it only tracks a single mode value**, but in some cases, there could be multiple values with the same highest frequency (multiple modes).\n\nFor example, if we have an array like [1, 2, 2, 3, 3], both 2 and 3 appear twice, so both are modes. However, the current function will return only the first one it encounters.\n\n## Fixed Implementation\n\n```javascript\nfunction findMode(numbers) {\n  // Handle edge cases\n  if (!numbers || numbers.length === 0) return null;\n  \n  // Create an object to track frequency of each number\n  const frequency = {};\n  let maxFrequency = 0;\n  let modes = [];\n  \n  // Count frequency of each number\n  for (const num of numbers) {\n    frequency[num] = frequency[num] ? frequency[num] + 1 : 1;\n    \n    // If we found a new maximum frequency\n    if (frequency[num] > maxFrequency) {\n      maxFrequency = frequency[num];\n      // Reset modes array with the new mode\n      modes = [num];\n    }\n    // If we found another number with the same maximum frequency\n    else if (frequency[num] === maxFrequency) {\n      // Add this number to the modes array\n      modes.push(num);\n    }\n  }\n  \n  // If there's only one mode, return that value, otherwise return the array of modes\n  return modes.length === 1 ? modes[0] : modes;\n}\n```\n\n## Step-by-Step Explanation\n\nLet's trace through the fixed function with the example array `[1, 2, 2, 3, 3, 3, 4]`:\n\n1. We initialize `frequency = {}`, `maxFrequency = 0`, and `modes = []`\n\n2. We start iterating through the array:\n   - For value `1`:\n     - Set `frequency[1] = 1`\n     - Since `frequency[1] > maxFrequency` (1 > 0), update `maxFrequency = 1` and `modes = [1]`\n   \n   - For value `2`:\n     - Set `frequency[2] = 1`\n     - Since `frequency[2] = maxFrequency` (1 = 1), add 2 to `modes`: `modes = [1, 2]`\n\n   - For value `2` (second occurrence):\n     - Increment `frequency[2]` to 2\n     - Since `frequency[2] > maxFrequency` (2 > 1), update `maxFrequency = 2` and reset `modes = [2]`\n\n   - For value `3`:\n     - Set `frequency[3] = 1`\n     - Since `frequency[3] < maxFrequency` (1 < 2), do nothing with modes\n\n   - For value `3` (second occurrence):\n     - Increment `frequency[3]` to 2\n     - Since `frequency[3] = maxFrequency` (2 = 2), add 3 to `modes`: `modes = [2, 3]`\n\n   - For value `3` (third occurrence):\n     - Increment `frequency[3]` to 3\n     - Since `frequency[3] > maxFrequency` (3 > 2), update `maxFrequency = 3` and reset `modes = [3]`\n\n   - For value `4`:\n     - Set `frequency[4] = 1`\n     - Since `frequency[4] < maxFrequency` (1 < 3), do nothing with modes\n\n3. After the loop, `modes = [3]` and since `modes.length === 1`, we return the single value `3`\n\nThe key improvements in the fixed function are:\n1. Tracking multiple modes in an array instead of a single value\n2. Adding a condition to handle when we find another value with the same frequency\n3. Returning either a single value or an array of values based on the number of modes found",
        hints: [
          "Ask specifically for identification of the error and explanation of why it's problematic.",
          "Request a corrected version with explanatory comments.",
          "Ask for a step-by-step walkthrough of the corrected function with a specific example input.",
        ],
      },
      {
        stepNumber: 2,
        goalDescription:
          "Create a prompt that identifies and fixes a performance issue in a Python function.",
        examplePrompt:
          "Evaluate the following Python function that is meant to find all prime numbers up to a given limit using the Sieve of Eratosthenes algorithm. The function works correctly but has performance issues that would make it slow for large inputs. Identify the performance problems, explain why they impact efficiency, and provide an optimized version with comments explaining your changes. Include a Big O analysis of both the original and optimized versions.\n\n```python\ndef find_primes(limit):\n    primes = []\n    for num in range(2, limit + 1):\n        is_prime = True\n        for i in range(2, num):\n            if num % i == 0:\n                is_prime = False\n                break\n        if is_prime:\n            primes.append(num)\n    return primes\n```",
        targetResponse:
          "# Performance Analysis of Prime Number Function\n\n## Original Function Issues\n\nThe provided function has several significant performance issues:\n\n1. **Incorrect Algorithm**: Despite the description, this is **not** the Sieve of Eratosthenes. It's a trial division approach where each number is tested for divisibility by all smaller numbers.\n\n2. **Inefficient Testing Range**: For each number, the function tests divisibility by all numbers from 2 to num-1. However, we only need to check divisors up to the square root of the number.\n\n3. **Repeated Work**: The algorithm doesn't leverage previously identified primes. For example, if we know a number is divisible by 2, we don't need to check if it's divisible by 4, 6, 8, etc.\n\n## Big O Analysis of Original Function\n\n- Time Complexity: O(n²) where n is the limit\n  - For each number from 2 to n, we check up to n-2 potential divisors\n- Space Complexity: O(n) for storing the primes list\n\n## Optimized Implementation (True Sieve of Eratosthenes)\n\n```python\ndef find_primes_optimized(limit):\n    # Initialize a boolean array \"is_prime[0..limit]\" and set all entries to True\n    # A value in is_prime[i] will finally be False if i is not a prime, else True\n    is_prime = [True for i in range(limit + 1)]\n    is_prime[0] = is_prime[1] = False  # 0 and 1 are not prime numbers\n    \n    # Iterate from 2 to square root of limit\n    p = 2\n    while p * p <= limit:\n        # If is_prime[p] is not changed, then it is a prime\n        if is_prime[p]:\n            # Update all multiples of p\n            for i in range(p * p, limit + 1, p):\n                is_prime[i] = False\n        p += 1\n    \n    # Create a list of all prime numbers\n    primes = [p for p in range(2, limit + 1) if is_prime[p]]\n    return primes\n```\n\n## Big O Analysis of Optimized Function\n\n- Time Complexity: O(n log(log n)) where n is the limit\n  - This is much better than the O(n²) of the original function\n- Space Complexity: O(n) for storing the is_prime array and primes list\n\n## Explanation of the Optimized Algorithm\n\nThe true Sieve of Eratosthenes works as follows:\n\n1. Create a list of boolean values, initially all set to True, representing numbers from 0 to the limit.\n2. Mark 0 and 1 as non-prime (False).\n3. Starting with the first prime number (2), mark all its multiples as non-prime.\n4. Move to the next unmarked number (which is prime) and mark all its multiples as non-prime.\n5. Repeat until you've processed all numbers up to the square root of the limit.\n6. All remaining unmarked numbers are prime.\n\nKey optimizations in this approach:\n\n1. **Only check up to square root of limit**: If a number n has a divisor greater than its square root, it must also have a divisor less than its square root. So we only need to check potential primes up to √limit.\n\n2. **Start marking multiples from p²**: Any smaller multiples of p would have already been marked by smaller primes. For example, when processing p=5, we don't need to mark 5×2=10, 5×3=15, and 5×4=20 because they would have been marked when processing p=2 and p=3.\n\n3. **Use a boolean array**: Instead of testing each number individually, we use a boolean array to track which numbers are prime. This allows us to eliminate non-primes efficiently.\n\n## Example Comparison for limit=30\n\n- Original function: Performs approximately 225 division operations\n- Optimized function: Performs approximately 30 array assignments\n\nFor larger limits (e.g., 10,000), the difference becomes even more dramatic, with the original function potentially millions of times slower.",
        hints: [
          "Request analysis of both time and space complexity.",
          "Ask for identification of inefficiencies in the algorithm rather than just syntax improvements.",
          "Specify that you want a truly optimized solution with explanations of why the optimizations work.",
        ],
      },
      {
        stepNumber: 3,
        goalDescription:
          "Create a prompt that identifies and fixes a subtle bug in a React component's state management.",
        examplePrompt:
          "Analyze this React functional component that allows users to add items to a todo list. The component has a subtle bug related to state management that causes unexpected behavior. Identify the bug, explain why it's occurring, and provide a fixed version of the component. Also, explain best practices for avoiding similar issues in React components.\n\n```jsx\nimport React, { useState } from 'react';\n\nfunction TodoList() {\n  const [todos, setTodos] = useState([]);\n  const [newTodo, setNewTodo] = useState('');\n  \n  function addTodo() {\n    if (newTodo.trim() === '') return;\n    \n    setTodos(todos.push({\n      id: Date.now(),\n      text: newTodo,\n      completed: false\n    }));\n    \n    setNewTodo('');\n  }\n  \n  function toggleComplete(id) {\n    const updatedTodos = todos.map(todo => {\n      if (todo.id === id) {\n        todo.completed = !todo.completed;\n      }\n      return todo;\n    });\n    \n    setTodos(updatedTodos);\n  }\n  \n  return (\n    <div>\n      <h1>Todo List</h1>\n      <div>\n        <input\n          type=\"text\"\n          value={newTodo}\n          onChange={(e) => setNewTodo(e.target.value)}\n        />\n        <button onClick={addTodo}>Add Todo</button>\n      </div>\n      <ul>\n        {todos.map(todo => (\n          <li\n            key={todo.id}\n            onClick={() => toggleComplete(todo.id)}\n            style={{ textDecoration: todo.completed ? 'line-through' : 'none' }}\n          >\n            {todo.text}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nexport default TodoList;\n```",
        targetResponse:
          "# React Component Bug Analysis\n\n## Identified Bugs\n\nThis React component contains two significant bugs related to state management:\n\n### Bug 1: Improper State Update in `addTodo`\n\n```javascript\nsetTodos(todos.push({\n  id: Date.now(),\n  text: newTodo,\n  completed: false\n}));\n```\n\nThe `Array.push()` method modifies the original array and returns the new length of the array, not the updated array itself. This means `setTodos()` is being called with a number (the new length), not an array, which will cause React to throw an error when trying to map over the todos in the render method.\n\n### Bug 2: Direct Mutation of State in `toggleComplete`\n\n```javascript\nconst updatedTodos = todos.map(todo => {\n  if (todo.id === id) {\n    todo.completed = !todo.completed; // Directly mutating the todo object\n  }\n  return todo;\n});\n```\n\nThis code directly mutates the `todo` object from the current state, which violates React's immutability principle. Even though a new array is created with `map()`, the objects inside the array are the same references as in the original array.\n\n## Fixed Component\n\n```jsx\nimport React, { useState } from 'react';\n\nfunction TodoList() {\n  const [todos, setTodos] = useState([]);\n  const [newTodo, setNewTodo] = useState('');\n  \n  function addTodo() {\n    if (newTodo.trim() === '') return;\n    \n    // Create a new array with the existing todos and the new todo\n    setTodos([...todos, {\n      id: Date.now(),\n      text: newTodo,\n      completed: false\n    }]);\n    \n    setNewTodo('');\n  }\n  \n  function toggleComplete(id) {\n    // Create new objects for any todo that changes\n    const updatedTodos = todos.map(todo => {\n      if (todo.id === id) {\n        // Return a new object with the completed property toggled\n        return { ...todo, completed: !todo.completed };\n      }\n      return todo;\n    });\n    \n    setTodos(updatedTodos);\n  }\n  \n  return (\n    <div>\n      <h1>Todo List</h1>\n      <div>\n        <input\n          type=\"text\"\n          value={newTodo}\n          onChange={(e) => setNewTodo(e.target.value)}\n        />\n        <button onClick={addTodo}>Add Todo</button>\n      </div>\n      <ul>\n        {todos.map(todo => (\n          <li\n            key={todo.id}\n            onClick={() => toggleComplete(todo.id)}\n            style={{ textDecoration: todo.completed ? 'line-through' : 'none' }}\n          >\n            {todo.text}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nexport default TodoList;\n```\n\n## Explanation of Fixes\n\n1. **Fix for Bug 1 (addTodo function):**\n   - Used the spread operator `[...todos, newTodoObject]` to create a new array that includes all existing todos plus the new one\n   - This properly returns a new array for the state update rather than returning the length of the array\n\n2. **Fix for Bug 2 (toggleComplete function):**\n   - Used the object spread operator `{ ...todo, completed: !todo.completed }` to create a new todo object with the updated property\n   - This ensures we don't mutate the original todo object from the state\n\n## Best Practices for React State Management\n\n1. **Treat State as Immutable:**\n   - Never directly modify state objects or arrays\n   - Always return new objects/arrays when updating state\n   - Use methods like spread operator (`...`), `map()`, `filter()`, and `concat()` that return new arrays instead of methods like `push()`, `pop()`, `shift()`, `unshift()`, and `splice()` that mutate arrays\n\n2. **Use Functional Updates for State Derived from Current State:**\n   - When a new state value depends on the previous state, use the functional update form:\n   ```javascript\n   // Instead of this:  \n   setTodos([...todos, newTodo]);\n   \n   // Use this:  \n   setTodos(prevTodos => [...prevTodos, newTodo]);\n   ```\n   - This ensures you're working with the most recent state value, avoiding race conditions\n\n3. **Consider Using Immutability Libraries:**\n   - For complex nested state, consider libraries like `immer` that make immutable updates more intuitive\n   ```javascript\n   import produce from 'immer';\n   \n   setTodos(produce(draft => {\n     const todo = draft.find(t => t.id === id);\n     if (todo) todo.completed = !todo.completed;\n   }));\n   ```\n\n4. **Use Appropriate Data Structures:**\n   - For frequent lookups by ID, consider using objects (as maps) instead of arrays:\n   ```javascript\n   // Object with IDs as keys\n   const [todos, setTodos] = useState({});\n   \n   // Adding a todo\n   setTodos(prevTodos => {\n     const id = Date.now();\n     return { ...prevTodos, [id]: { id, text: newTodo, completed: false } };\n   });\n   ```\n\n5. **Use React DevTools:**\n   - Monitor component renders and state changes with React DevTools to catch unexpected behavior\n\n6. **Consider useReducer for Complex State Logic:**\n   - When state updates involve multiple related values or complex logic, consider using `useReducer` instead of multiple `useState` calls\n\nBy following these best practices, you can avoid subtle bugs related to state management in React components and make your code more predictable and easier to debug.",
        hints: [
          "Ask for identification of all bugs related to React state management principles.",
          "Request explanations of why the bugs occur and best practices to avoid them.",
          "Ask for a complete fixed version that follows React best practices.",
        ],
      },
    ],
    totalSteps: 3,
  },
  "6": {
    id: "6",
    title: "Master Chain-of-Thought Prompting",
    description:
      "Advanced techniques for guiding AI through complex reasoning tasks by breaking down the thinking process.",
    difficulty: "advanced" as const,
    steps: [
      {
        stepNumber: 1,
        goalDescription:
          "Create a prompt that guides the AI through step-by-step reasoning to solve a complex logic puzzle.",
        examplePrompt:
          "I want you to solve this logic puzzle by breaking down your thinking into clear steps. First, identify the given information and constraints. Then, establish what needs to be determined. Next, work through the puzzle step-by-step, explicitly showing your reasoning at each stage. After reaching a conclusion, verify your answer by checking it against all the original constraints.\n\nPuzzle: Five friends (Alex, Blake, Casey, Dana, and Elliot) live in five different houses, each with a different color (blue, green, red, white, and yellow). Each person has a different occupation (baker, doctor, journalist, lawyer, and teacher) and a different pet (cat, dog, fish, hamster, and parrot). Use the following clues to determine who lives where, what their occupation is, and what pet they have:\n\n1. The person who lives in the red house is a teacher.\n2. Alex lives in the white house.\n3. The baker owns a dog.\n4. Dana is a journalist.\n5. The person who owns a hamster lives in the blue house.\n6. Casey lives next to the person who owns a cat.\n7. The lawyer lives in the yellow house.\n8. Blake is a doctor.\n9. Elliot owns a parrot.\n10. Casey lives in the green house.\n11. The baker lives next to the house with the fish.\n\nBe sure to explain your reasoning for each deduction you make.",
        targetResponse:
          "# Solving the Logic Puzzle Step-by-Step\n\n## Step 1: Identify and organize the given information\n\nLet me start by setting up a grid to keep track of the relationships between the five categories: people, house colors, occupations, and pets.\n\nPeople: Alex, Blake, Casey, Dana, Elliot\nHouse Colors: blue, green, red, white, yellow\nOccupations: baker, doctor, journalist, lawyer, teacher\nPets: cat, dog, fish, hamster, parrot\n\n## Step 2: Record the direct information from the clues\n\nFrom the clues, I can directly establish:\n\n- Clue 1: The teacher lives in the red house\n- Clue 2: Alex lives in the white house\n- Clue 3: The baker owns a dog\n- Clue 4: Dana is a journalist\n- Clue 5: The hamster is in the blue house\n- Clue 7: The lawyer lives in the yellow house\n- Clue 8: Blake is a doctor\n- Clue 9: Elliot owns a parrot\n- Clue 10: Casey lives in the green house\n\n## Step 3: Begin making deductions by combining clues\n\nFirst, let's fill in what we know about the occupations:\n- Blake is a doctor (clue 8)\n- Dana is a journalist (clue 4)\n- Someone is a teacher (clue 1)\n- Someone is a baker (clue 3)\n- Someone is a lawyer (clue 7)\n\nAnd the house colors:\n- Alex lives in the white house (clue 2)\n- Casey lives in the green house (clue 10)\n- Someone lives in the red house (clue 1)\n- Someone lives in the blue house (clue 5)\n- Someone lives in the yellow house (clue 7)\n\nAnd the pets:\n- Elliot owns a parrot (clue 9)\n- Someone owns a dog (clue 3)\n- Someone owns a hamster (clue 5)\n- Someone owns a cat (clue a6)\n- Someone owns a fish (clue 11)\n\n## Step 4: Make connections between categories\n\nWe know:\n- The teacher lives in the red house (clue 1)\n- The lawyer lives in the yellow house (clue 7)\n- The hamster is in the blue house (clue 5)\n- The baker owns a dog (clue 3)\n\nSince we know the occupations of Blake (doctor) and Dana (journalist), and we know that someone is a teacher, baker, and lawyer, we can deduce that either Alex, Casey, or Elliot must be the teacher, baker, and lawyer.\n\n## Step 5: Use constraints about neighbors\n\nClue 6 says Casey lives next to the person who owns a cat.\nClue 11 says the baker lives next to the house with the fish.\n\nTo use these neighbor relationships effectively, I need to determine the order of the houses.\n\nLet's assume the houses are arranged in a row, numbered 1-5. Since Casey lives next to the cat owner, Casey must be in house 1, 2, 4, or 5 (not in house 3, which would have neighbors on both sides). Similarly, the baker must be in house 1, 2, 4, or 5.\n\n## Step 6: Narrow down possibilities through logical elimination\n\nLet's continue by figuring out who could be the lawyer (yellow house):\n- Not Blake (doctor)\n- Not Dana (journalist)\n- Could be Alex, Casey, or Elliot\n\nBut since Casey lives in the green house, Casey cannot be in the yellow house. And since Alex lives in the white house, Alex cannot be in the yellow house. Therefore, Elliot must be the lawyer in the yellow house.\n\nNow let's determine who could be the teacher (red house):\n- Not Blake (doctor)\n- Not Dana (journalist)\n- Not Elliot (lawyer)\n- Could be Alex or Casey\n\nBut since Alex lives in the white house and Casey lives in the green house, neither can live in the red house. This seems like a contradiction. Let me double-check my reasoning...\n\nI made a mistake. Let me reevaluate more carefully.\n\n## Step 7: Reevaluate and start with the most constrained variables\n\nLet's list what we know for sure about each person:\n\n- Alex: Lives in the white house\n- Blake: Is a doctor\n- Casey: Lives in the green house\n- Dana: Is a journalist\n- Elliot: Owns a parrot\n\nAnd what we know about each house color:\n- Red: Teacher lives here\n- Blue: Hamster owner lives here\n- Green: Casey lives here\n- White: Alex lives here\n- Yellow: Lawyer lives here\n\nAnd occupations:\n- Baker: Owns a dog\n- Doctor: Blake\n- Journalist: Dana\n- Lawyer: Lives in yellow house\n- Teacher: Lives in red house\n\nNow, since we know Elliot has a parrot, and the baker has a dog, and the blue house has a hamster, Elliot cannot be the baker or live in the blue house.\n\nSince the lawyer lives in the yellow house, and Alex lives in the white house, Casey lives in the green house, and the teacher lives in the red house, Elliot must be the lawyer (as neither Blake nor Dana can be, and Alex and Casey have different house colors).\n\nSo Elliot is the lawyer, lives in the yellow house, and has a parrot.\n\nNow, who lives in the red house as the teacher? Not Alex (white house), not Casey (green house), not Elliot (yellow house/lawyer), not Dana (journalist). That leaves Blake. So Blake is the doctor who lives in the red house and is also the teacher... wait, that's not possible. Let me reevaluate again.\n\n## Step 8: Correct identification of constraints\n\nI see the issue. I incorrectly assumed that the teacher must be one of our five people. Let me re-read the clues.\n\nOk, clue 1 states \"The person who lives in the red house is a teacher.\" This means one of our five people IS the teacher and lives in the red house.\n\nLet me start again with a more careful approach:\n\n- Alex lives in the white house and cannot be the journalist (Dana), doctor (Blake), or lawyer (yellow house). So Alex is either the teacher or the baker.\n- Blake is a doctor and must live in one of the houses.\n- Casey lives in the green house and cannot be the journalist (Dana), doctor (Blake), or lawyer (yellow house). So Casey is either the teacher or the baker.\n- Dana is a journalist and must live in one of the houses.\n- Elliot owns a parrot and must live in one of the houses.\n\nNow, since the teacher lives in the red house, and neither Alex (white) nor Casey (green) can be the teacher, the teacher must be either Blake, Dana, or Elliot.\n\nBut we know Blake is the doctor, and Dana is the journalist, so by elimination, Elliot must be the teacher living in the red house with a parrot.\n\nWait, we also established that the lawyer lives in the yellow house. If Elliot is the teacher, who is the lawyer? Let me reevaluate the constraints carefully once more.\n\n## Step 9: Final systematic approach\n\nLet's build a complete grid and fill in what we know:\n\n|        | Alex | Blake | Casey | Dana | Elliot |\n|--------|------|-------|-------|------|--------|\n| House  | White|       | Green |      |        |\n| Job    |      |Doctor |       |Journalist|     |\n| Pet    |      |       |       |      | Parrot |\n\nNow, let's add the constraints about houses and occupations:\n- Red house: Teacher lives here\n- Yellow house: Lawyer lives here\n- Blue house: Hamster owner lives here\n- Baker: Owns a dog\n\nSince we know Elliot has a parrot, and the hamster is in the blue house, Elliot can't live in the blue house.\n\nWe know Blake is the doctor, Dana is the journalist, someone is the lawyer (yellow house), and someone is the teacher (red house). The remaining occupation is baker (who owns a dog).\n\nSince Casey and Alex are not yet assigned occupations, one must be the baker and the other must be either the lawyer or the teacher.\n\nIf Alex is the baker, then Alex owns a dog. This would mean Casey must be either the lawyer or the teacher. But the lawyer lives in the yellow house, and the teacher lives in the red house, but Casey lives in the green house. This is a contradiction.\n\nSo Casey must be the baker who owns a dog. And Alex must be either the lawyer or the teacher.\n\nBut Alex lives in the white house, not the yellow (lawyer) or red (teacher) house. Another contradiction.\n\nI need to reconsider my assumptions.\n\n## Step 10: Correct assignment through systematic elimination\n\nLet me re-read all the clues carefully and start again:\n\n1. The teacher lives in the red house.\n2. Alex lives in the white house.\n3. The baker owns a dog.\n4. Dana is a journalist.\n5. The hamster owner lives in the blue house.\n6. Casey lives next to the cat owner.\n7. The lawyer lives in the yellow house.\n8. Blake is a doctor.\n9. Elliot owns a parrot.\n10. Casey lives in the green house.\n11. The baker lives next to the fish owner.\n\nNow let's take a different approach. Let's try to determine who lives in each colored house:\n\n- White house: Alex (clue 2)\n- Green house: Casey (clue 10)\n- Red house: Contains the teacher (clue 1)\n- Yellow house: Contains the lawyer (clue 7)\n- Blue house: Contains the hamster owner (clue 5)\n\nAlex and Casey are accounted for. The remaining people (Blake, Dana, Elliot) must live in the red, yellow, and blue houses.\n\nWe know Blake is the doctor and Dana is the journalist. The remaining occupations (teacher, lawyer, baker) must be assigned among Alex, Casey, and Elliot.\n\nSince the teacher lives in the red house, and the lawyer lives in the yellow house, neither can be Alex or Casey. Therefore:\n- Elliot must be either the teacher or the lawyer\n- Either Blake or Dana must be the other one (teacher or lawyer)\n- Either Alex or Casey must be the baker\n\nWe know Elliot has a parrot, the baker has a dog, and the hamster owner lives in the blue house.\n\nIf Elliot is the teacher, Elliot lives in the red house and has a parrot.\nIf Elliot is the lawyer, Elliot lives in the yellow house and has a parrot.\n\nLet's assume Elliot is the teacher in the red house.\nThen either Blake or Dana must be the lawyer in the yellow house.\n- If Blake is the lawyer, then Blake is both a doctor and a lawyer, which is a contradiction.\n- If Dana is the lawyer, then Dana is both a journalist and a lawyer, which is a contradiction.\n\nSo Elliot cannot be the teacher.\n\nThis means Elliot must be the lawyer in the yellow house with a parrot.\n\nNow either Blake or Dana must be the teacher in the red house.\n- If Blake is the teacher, then Blake is both a doctor and a teacher, which is a contradiction.\n- Therefore, Dana must be the teacher in the red house, as well as a journalist.\n\nBut wait, that's also a contradiction. I'm missing something in my logic.\n\nLet me re-examine the clues once more.\n\n## Step 11: Corrected Analysis\n\nI realize I've been making a fundamental error. The clues state \"The person who lives in the red house IS a teacher\" not \"The teacher also does something else.\" Each person has exactly one occupation.\n\nSo let's approach this again:\n\n1. The person in the red house is a teacher.\n2. Alex lives in the white house.\n3. The baker owns a dog.\n4. Dana is a journalist.\n5. The hamster owner lives in the blue house.\n6. Casey lives next to the cat owner.\n7. The lawyer lives in the yellow house.\n8. Blake is a doctor.\n9. Elliot owns a parrot.\n10. Casey lives in the green house.\n11. The baker lives next to the fish owner.\n\nWe have:\n- Dana: journalist\n- Blake: doctor\n- Someone: teacher (red house)\n- Someone: lawyer (yellow house)\n- Someone: baker (owns a dog)\n\nSince Dana is a journalist and Blake is a doctor, the remaining three occupations (teacher, lawyer, baker) must be assigned to Alex, Casey, and Elliot.\n\nAlex lives in the white house, so Alex can't be the teacher (red house) or the lawyer (yellow house). So Alex must be the baker, who owns a dog.\n\nCasey lives in the green house, so Casey can't be the teacher (red house) or the lawyer (yellow house). But all occupations must be assigned, which is a contradiction.\n\nI need to verify my understanding of the problem. The problem states that each person has a different occupation and different pet, and each lives in a different colored house. So each person should be assigned exactly one occupation, one pet, and one house color.\n\n## Step 12: Systematic solution with correct understanding\n\nLet me start fresh. We have 5 people, 5 house colors, 5 occupations, and 5 pets. Let's list what we know directly:\n\n- Alex lives in the white house\n- Blake is a doctor\n- Casey lives in the green house\n- Dana is a journalist\n- Elliot owns a parrot\n- The teacher lives in the red house\n- The lawyer lives in the yellow house\n- The baker owns a dog\n- The hamster owner lives in the blue house\n\nNow, since Alex lives in the white house, and Casey lives in the green house, that means Blake, Dana, and Elliot must live in the blue, red, and yellow houses.\n\nSince the lawyer lives in the yellow house, and the teacher lives in the red house, and Blake is a doctor, if Blake lived in the blue house, then either Dana or Elliot would have to be both the lawyer and the teacher, which is impossible.\n\nLet me try assigning Blake to the red house. Then Blake is the doctor and the teacher, which is a contradiction.\n\nLet me try assigning Blake to the yellow house. Then Blake is the doctor and the lawyer, which is a contradiction.\n\nSo Blake must live in the blue house, and be the doctor, and own the hamster.\n\nNow Dana and Elliot must live in the red and yellow houses.\n\nDana is a journalist. If Dana lived in the red house, Dana would be both a journalist and a teacher, which is a contradiction. So Dana cannot live in the red house.\n\nTherefore, Dana must live in the yellow house and be the journalist and the lawyer.\n\nAnd Elliot must live in the red house, be the teacher, and own a parrot.\n\nNow for the remaining pets (cat, dog, fish), we need to assign them to Alex, Casey, and Dana.\n\nWe know the baker owns a dog. Since Blake is a doctor, Dana is a journalist, and Elliot is a teacher, either Alex or Casey must be the baker. The baker also lives next to the fish owner.\n\nTo determine the neighbors, let's number the houses 1-5 in some order. Since Casey lives next to the cat owner, and the baker lives next to the fish owner, we need to determine the house order.\n\nLet's try: Blue, Green, Red, White, Yellow\n\nThis would place the occupants as: Blake, Casey, Elliot, Alex, Dana\nBlake has a hamster. Elliot has a parrot. We need to assign the dog, cat, and fish to Casey, Alex, and Dana.\n\nThe baker owns a dog and lives next to the fish owner. If Alex is the baker, then Alex owns a dog, and one of Alex's neighbors must own a fish. But in our order, Alex's only neighbor is Elliot, who has a parrot. This doesn't work.\n\nLet's try a different order: Blue, White, Green, Red, Yellow\nThis places the occupants as: Blake, Alex, Casey, Elliot, Dana\n\nIf Alex is the baker with a dog, then either Blake or Casey must have the fish. Since Blake has a hamster, Casey must have the fish. And Dana has the cat.\n\nThis scenario works: Casey has the fish, Casey lives next to Alex (the baker with a dog), and Casey also lives next to Elliot (red house).\n\nBut wait, another clue says Casey lives next to the cat owner. In our current arrangement, the cat owner would be Dana, who is not next to Casey. This arrangement doesn't work.\n\nLet's try: White, Blue, Green, Red, Yellow\nThis places the occupants as: Alex, Blake, Casey, Elliot, Dana\n\nIf Alex is the baker with a dog, Blake has a hamster, and Elliot has a parrot, then Casey or Dana must have the fish, and the other has the cat.\n\nCasey lives next to the cat owner, so Dana must have the cat, and Casey must have the fish. But the baker (Alex) is supposed to live next to the fish owner (Casey), but they're not adjacent in this arrangement.\n\nLet's try: Yellow, Red, Green, Blue, White\nThis places the occupants as: Dana, Elliot, Casey, Blake, Alex\n\nAlex lives in the white house and must be the baker (with a dog) since Blake is the doctor, Dana is the journalist, and Elliot is the teacher. The baker lives next to the fish owner, so Blake must have the fish. Casey must have the cat since Casey lives next to the cat owner (Elliot), and Elliot has a parrot, Dana must have the cat. But that assigns the cat to both Casey and Dana, which is a contradiction.\n\nLet me be more systematic.\n\n## Step 13: Final systematic solution\n\nLet's determine what's possible for the blue house. The hamster owner lives in the blue house, and we know Elliot has a parrot, so Elliot can't live in the blue house. So either Alex, Blake, Casey, or Dana must live in the blue house and own the hamster.\n\nBut Alex lives in the white house, and Casey lives in the green house, so neither can live in the blue house. That leaves Blake or Dana for the blue house.\n\nLet's try Blake in the blue house. Blake is a doctor and would own the hamster.\n\nNow for the red house (teacher) and yellow house (lawyer), we have Dana and Elliot left.\n\nIf Dana is in the red house, Dana would be the teacher. But Dana is a journalist, so this is a contradiction.\n\nSo Elliot must be in the red house and be the teacher. And Dana must be in the yellow house and be the lawyer.\n\nRecapping so far:\n- Alex: white house, occupation TBD, pet TBD\n- Blake: blue house, doctor, hamster\n- Casey: green house, occupation TBD, pet TBD\n- Dana: yellow house, journalist and lawyer (contradiction!)\n- Elliot: red house, teacher, parrot\n\nWait, I've reached a contradiction again. Dana can't be both a journalist and a lawyer.\n\nI must be misinterpreting something. Let me check my understanding of the clues again.\n\nAh, I see the issue. Clue 4 says \"Dana is a journalist\" and clue 7 says \"The lawyer lives in the yellow house.\" I've been assuming that the five occupations (baker, doctor, journalist, lawyer, teacher) must be assigned one to each person. But the clues don't actually state that.\n\nLet me re-examine with the possibility that \"journalist\" might not be one of the five main occupations, or that \"lawyer\" might not be one of the five.\n\nActually, let's list the occupations mentioned: baker, doctor, journalist, lawyer, teacher. That's exactly 5, matching our 5 people. So each person should have exactly one of these occupations.\n\nI'm missing something else. Let me re-read the clues and start from scratch.\n\n## Step 14: Final correct solution\n\nLet me establish the known facts again:\n\n- Alex lives in the white house\n- Blake is a doctor\n- Casey lives in the green house\n- Dana is a journalist\n- Elliot owns a parrot\n- The teacher lives in the red house\n- The lawyer lives in the yellow house\n- The baker owns a dog\n- The hamster owner lives in the blue house\n\nIf Dana is a journalist, and Blake is a doctor, then the three remaining occupations (baker, lawyer, teacher) must be assigned to Alex, Casey, and Elliot.\n\nSince the teacher lives in the red house, and the lawyer lives in the yellow house, neither Alex (white house) nor Casey (green house) can be the teacher or lawyer.\n\nThis means Elliot must be either the teacher or the lawyer, and thus must live in either the red or yellow house.\n\nSince Elliot can't be both, one of the others must be either the teacher or lawyer. But not Alex or Casey, as established. And not Blake (doctor).\n\nSo Dana must be either the lawyer or the teacher, in addition to being a journalist. This is a contradiction.\n\nI need to reexamine my approach. The clues state \"Dana is a journalist\" and \"Blake is a doctor.\" These are occupations. Then we have \"The person who lives in the red house is a teacher\" and \"The lawyer lives in the yellow house.\"\n\nOh, I've been misunderstanding. The clues don't say Dana is ONLY a journalist. Dana could be a journalist AND a lawyer, for instance.\n\nNo, that wouldn't make sense in the context of this puzzle. Each person should have exactly one occupation.\n\nI'm overthinking this. Let me try a different approach by filling in a complete grid and seeing if it reveals the solution.\n\n## Step 15: Complete grid solution\n\nPeople: Alex, Blake, Casey, Dana, Elliot\nColors: Blue, Green, Red, White, Yellow\nJobs: Baker, Doctor, Journalist, Lawyer, Teacher\nPets: Cat, Dog, Fish, Hamster, Parrot\n\nKnown assignments:\n- Alex → White\n- Blake → Doctor\n- Casey → Green\n- Dana → Journalist\n- Elliot → Parrot\n- Red → Teacher\n- Yellow → Lawyer\n- Baker → Dog\n- Blue → Hamster\n\nWe need to determine the remaining assignments. Let's start by determining who lives in each house color.\n\nFor the blue house (hamster owner), it can't be Alex (white) or Casey (green). It also can't be Elliot (parrot owner). So either Blake or Dana must live in the blue house and own the hamster.\n\nFor the red house (teacher), it can't be Alex (white) or Casey (green). It also can't be Dana (journalist) or Blake (doctor). So Elliot must live in the red house and be the teacher.\n\nFor the yellow house (lawyer), it can't be Alex (white) or Casey (green). It also can't be Blake (doctor) or Elliot (teacher). So Dana must live in the yellow house and be the journalist and lawyer.\n\nWait, that's a contradiction again. Dana can't be both a journalist and a lawyer if each person has exactly one occupation.\n\nLet me double-check my understanding of the clues.\n\n\"Dana is a journalist\" - This directly assigns the journalist occupation to Dana.\n\"The lawyer lives in the yellow house\" - This doesn't directly assign the lawyer occupation to a specific person, just to whoever lives in the yellow house.\n\nPerhaps the actual five occupations are different than what I assumed. Let me list all occupations mentioned: baker, doctor, journalist, lawyer, teacher. That's 5, which matches the 5 people.\n\nLet me try a different approach. Perhaps I've been too rigid about the house colors.\n\nActually, let me just try different possible assignments for the unassigned variables and see if any satisfy all constraints.\n\n## Step 16: Systematic trial and error\n\nLet's try assigning the remaining house colors:\nBlue: Either Blake or Dana\nRed: Either Blake, Dana, or Elliot\nYellow: Either Blake, Dana, or Elliot\n\nSince Elliot owns a parrot, and the hamster owner lives in the blue house, Elliot can't live in the blue house. So the blue house is either Blake or Dana.\n\nLet's try Blake in the blue house. Then Blake is the doctor who owns the hamster.\n\nThat leaves Dana and Elliot for the red and yellow houses. Since the teacher is in the red house and the lawyer is in the yellow house, and we know Dana is a journalist, Dana can't be the teacher or the lawyer unless Dana has multiple occupations.\n\nAssuming each person has exactly one occupation, Dana can't be in the red or yellow house. But that's a contradiction, as Dana must be somewhere.\n\nLet's try Dana in the blue house. Then Dana is the journalist who owns the hamster.\n\nThat leaves Blake and Elliot for the red and yellow houses. Blake is a doctor. The teacher is in the red house and the lawyer is in the yellow house.\n\nIf Blake is in the red house, Blake would be the doctor and teacher, which is a contradiction. If Blake is in the yellow house, Blake would be the doctor and lawyer, which is a contradiction.\n\nSo neither Blake nor Dana can be in the blue house, which is a contradiction to our earlier deduction.\n\nI must be misunderstanding something fundamental about the problem. Let me re-read the clues once more.\n\n## Step 17: Correct understanding of constraints\n\nOn further review, I realize I made a critical error. The clues specify five distinct occupations (baker, doctor, journalist, lawyer, teacher) AND that each person has a different occupation. The clues do not state that each person has exactly one occupation, as I was assuming.\n\nRedoable clues one more time:\n\n1. The person who lives in the red house is a teacher.\n2. Alex lives in the white house.\n3. The baker owns a dog.\n4. Dana is a journalist.\n5. The person who owns a hamster lives in the blue house.\n6. Casey lives next to the person who owns a cat.\n7. The lawyer lives in the yellow house.\n8. Blake is a doctor.\n9. Elliot owns a parrot.\n10. Casey lives in the green house.\n11. The baker lives next to the house with the fish.\n\nLet's assign house colors, occupations, and pets methodically:\n\n1. Alex lives in the white house (clue 2)\n2. Casey lives in the green house (clue 10)\n3. The teacher lives in the red house (clue 1)\n4. The lawyer lives in the yellow house (clue 7)\n5. The hamster owner lives in the blue house (clue 5)\n\nSo the blue, red, and yellow houses must be occupied by Blake, Dana, and Elliot.\n\n6. Blake is a doctor (clue 8)\n7. Dana is a journalist (clue 4)\n8. The remaining occupation is baker\n\n9. Elliot owns a parrot (clue 9)\n10. The baker owns a dog (clue 3)\n11. The hamster owner lives in the blue house (clue 5)\n\nSo the remaining pets (cat and fish) must be assigned.\n\nNow, since the baker owns a dog, and Blake is a doctor, and Dana is a journalist, either Alex, Casey, or Elliot must be the baker.\n\nIf Elliot is the baker, Elliot owns both a parrot and a dog, which is a contradiction.\n\nSo either Alex or Casey must be the baker and own the dog.\n\nThe two neighbor clues are:\n- Casey lives next to the cat owner (clue 6)\n- The baker lives next to the fish owner (clue 11)\n\nSince Casey lives in the green house, Casey's neighbors are in adjacent houses.\n\nLet's try different house arrangements to see which satisfies all constraints.\n\n## Step 18: Final house arrangement determination\n\nLet's try this arrangement: White, Green, Blue, Red, Yellow\nThat assigns the occupants as: Alex, Casey, (Blake/Dana/Elliot), (Blake/Dana/Elliot), (Blake/Dana/Elliot)\n\nLet's try different assignments for the blue, red, and yellow houses.\n\nIf Blake is in the blue house, Blake is the doctor and owns the hamster. This leaves Dana and Elliot for the red and yellow houses.\n\nDana is a journalist. If Dana is in the red house, Dana would also be the teacher. If Dana is in the yellow house, Dana would also be the lawyer.\n\nSince each person has exactly one occupation, Dana can't be in the red or yellow house. This is a contradiction.\n\nSo Blake can't be in the blue house.\n\nIf Dana is in the blue house, Dana is the journalist and owns the hamster. This leaves Blake and Elliot for the red and yellow houses.\n\nIf Blake is in the red house, Blake would be the doctor and teacher. If Blake is in the yellow house, Blake would be the doctor and lawyer. Both are contradictions.\n\nSo Dana can't be in the blue house.\n\nIf Elliot is in the blue house, Elliot owns both a parrot and a hamster. This is a contradiction.\n\nSo this house arrangement doesn't work.\n\nLet's try: Blue, Green, White, Red, Yellow\n\nThis assigns the occupants as: (Blake/Dana/Elliot), Casey, Alex, (Blake/Dana/Elliot), (Blake/Dana/Elliot)\n\nWith these neighbors, Casey's neighbors are whoever is in the blue house and whoever is in the white house (Alex).\n\nLet's try different assignments for the blue, red, and yellow houses.\n\nIf Blake is in the blue house, Blake is the doctor and owns the hamster. This leaves Dana and Elliot for the red and yellow houses.\n\nIf Dana is in the red house, Dana would be the journalist and teacher. If Dana is in the yellow house, Dana would be the journalist and lawyer. Both are contradictions.\n\nSo Blake can't be in the blue house.\n\nApplying similar reasoning, we find this arrangement doesn't work either.\n\nLet's try one more arrangement: Blue, Green, Red, Yellow, White\n\nThis assigns the occupants as: (Blake/Dana/Elliot), Casey, (Blake/Dana/Elliot), (Blake/Dana/Elliot), Alex\n\nCasey's neighbors in this arrangement are whoever is in the blue house and whoever is in the red house.\n\nLet's try: Blake in the blue house, Dana in the red house, and Elliot in the yellow house.\n\nThis means Blake is the doctor and has the hamster, Dana is the journalist and teacher, and Elliot is the lawyer and has the parrot. But Dana can't be both a journalist and a teacher. Contradiction.\n\nLet's try: Blake in the red house, Dana in the blue house, and Elliot in the yellow house.\n\nThis means Blake is the doctor and teacher, Dana is the journalist and has the hamster, and Elliot is the lawyer and has the parrot. But Blake can't be both a doctor and a teacher. Contradiction.\n\nLet's try: Blake in the yellow house, Dana in the blue house, and Elliot in the red house.\n\nThis means Blake is the doctor and lawyer, Dana is the journalist and has the hamster, and Elliot is the teacher and has the parrot. But Blake can't be both a doctor and a lawyer. Contradiction.\n\nLet's try: Blake in the yellow house, Dana in the red house, and Elliot in the blue house.\n\nThis means Blake is the doctor and lawyer, Dana is the journalist and teacher, and Elliot has the parrot and hamster. But Blake can't be both a doctor and a lawyer, Dana can't be both a journalist and teacher, and Elliot can't have both a parrot and hamster. Multiple contradictions.\n\nLet's try: Blake in the red house, Dana in the yellow house, and Elliot in the blue house.\n\nThis means Blake is the doctor and teacher, Dana is the journalist and lawyer, and Elliot has the parrot and hamster. But Blake can't be both a doctor and teacher, Dana can't be both a journalist and lawyer, and Elliot can't have both a parrot and hamster. Multiple contradictions.\n\nLet's try: Blake in the blue house, Dana in the yellow house, and Elliot in the red house.\n\nThis means Blake is the doctor and has the hamster, Dana is the journalist and lawyer, and Elliot is the teacher and has the parrot. But Dana can't be both a journalist and a lawyer. Contradiction.\n\nNone of these arrangements work. I must be missing something.\n\nI think I've been wrongly assuming that the five occupations mentioned are distinct from the five people. Let me reread the problem statement.\n\n## Step 19: Correct interpretation of the problem\n\nThe problem states: \"Five friends (Alex, Blake, Casey, Dana, and Elliot) live in five different houses, each with a different color (blue, green, red, white, and yellow). Each person has a different occupation (baker, doctor, journalist, lawyer, and teacher) and a different pet (cat, dog, fish, hamster, and parrot).\"\n\nThis confirms that each person has exactly one occupation and one pet, and lives in one house. So the five occupations (baker, doctor, journalist, lawyer, teacher) are distributed among the five people, with each person having exactly one occupation.\n\nLet me try a different approach. Let's use the clues about neighbors to deduce the house arrangement.\n\nCasey lives next to the cat owner (clue 6)\nThe baker lives next to the house with the fish (clue 11)\n\nSince Casey lives in the green house, Casey's neighbors are in the houses adjacent to the green house.\n\nWe need to determine the house order.\n\nLet's try a different approach, by first deducing who has which occupation and which pet.\n\nOccupations:\n- Blake is a doctor (clue 8)\n- Dana is a journalist (clue 4)\n- The remaining occupations (baker, lawyer, teacher) must be distributed among Alex, Casey, and Elliot\n\nPets:\n- Elliot has a parrot (clue 9)\n- The baker has a dog (clue 3)\n- The hamster owner lives in the blue house (clue 5)\n- The remaining pets (cat, fish) must be distributed\n\nHouses:\n- Alex lives in the white house (clue 2)\n- Casey lives in the green house (clue 10)\n- The teacher lives in the red house (clue 1)\n- The lawyer lives in the yellow house (clue 7)\n- The hamster owner lives in the blue house (clue 5)\n\nSince the teacher lives in the red house, and the lawyer lives in the yellow house, and Blake is a doctor, and Dana is a journalist, neither Blake nor Dana can be the teacher or lawyer. So the teacher and lawyer must be among Alex, Casey, and Elliot.\n\nSince Alex lives in the white house, and Casey lives in the green house, neither can be the teacher (red house) or lawyer (yellow house). So Elliot must be either the teacher or the lawyer.\n\nIf Elliot is the teacher, Elliot lives in the red house. If Elliot is the lawyer, Elliot lives in the yellow house. Since Elliot can't be both, and the remaining occupation is baker, either Alex or Casey must be the baker.\n\nLet's try Elliot as the teacher in the red house. Then the lawyer must be either Blake or Dana, but they are already assigned as doctor and journalist, so this doesn't work.\n\nLet's try Elliot as the lawyer in the yellow house. Then the teacher must be either Blake or Dana, but they are already assigned, so this doesn't work.\n\nI'm still missing something. Let me reread the problem one more time.\n\n## Step 20: Correctly applying all constraints\n\nAfter careful reading of all clues and the problem statement, I need to make sure I'm correctly interpreting and applying all the constraints.\n\nLet's start with what we know:\n\n1. Alex lives in the white house (clue 2)\n2. Casey lives in the green house (clue 10)\n3. Blake is a doctor (clue 8)\n4. Dana is a journalist (clue 4)\n5. Elliot owns a parrot (clue 9)\n6. The red house occupant is a teacher (clue 1)\n7. The yellow house occupant is a lawyer (clue 7)\n8. The blue house occupant owns a hamster (clue 5)\n9. The baker owns a dog (clue 3)\n\nConstraints about neighbors:\n10. Casey lives next to the cat owner (clue 6)\n11. The baker lives next to the fish owner (clue 11)\n\nI need to determine:\n- Who lives in the blue, red, and yellow houses\n- Who is the baker, lawyer, and teacher\n- Who owns the cat, dog, fish, and hamster\n\nLet's approach this systematically, focusing on the occupation and house constraints.\n\nSince the teacher is in the red house and the lawyer is in the yellow house, and we know Alex lives in the white house and Casey lives in the green house, neither Alex nor Casey can be the teacher or lawyer.\n\nSince Blake is a doctor and Dana is a journalist, neither can be the teacher or lawyer.\n\nThat leaves Elliot, but Elliot can't be both the teacher and the lawyer.\n\nI must have misinterpreted something. Let me reread the clues once more.\n\nOh, I see where I was wrong. The clues don't say that neither Blake nor Dana can be the teacher or lawyer. They only say Blake is a doctor and Dana is a journalist, which means those are their occupations. But the clues don't say that being a doctor or journalist precludes being a teacher or lawyer in this puzzle context.\n\nActually, no. The problem states \"Each person has a different occupation (baker, doctor, journalist, lawyer, and teacher)\", so each person has exactly one occupation. Blake is a doctor, so Blake can't also be a teacher or lawyer.\n\nI've been overthinking this. Let's try once more with a fresh perspective.\n\n## Step 21: Final correct solution using process of elimination\n\nLet's systematically fill in what we know:\n\n| Person | House Color | Occupation | Pet |\n|--------|-------------|------------|---------|\n| Alex   | White       | ?          | ?     |\n| Blake  | ?           | Doctor     | ?     |\n| Casey  | Green       | ?          | ?     |\n| Dana   | ?           | Journalist | ?     |\n| Elliot | ?           | ?          | Parrot |\n\nAdditional constraints:\n- The teacher lives in the red house\n- The lawyer lives in the yellow house\n- The baker owns a dog\n- The hamster owner lives in the blue house\n- Casey lives next to the cat owner\n- The baker lives next to the fish owner\n\nNow, let's do a process of elimination for the blue, red, and yellow houses.\n\nThe blue, red, and yellow houses must be occupied by Blake, Dana, and Elliot (since Alex is in white and Casey is in green).\n\nSince the hamster owner lives in the blue house, and Elliot has a parrot, Elliot can't live in the blue house. So either Blake or Dana lives in the blue house and owns the hamster.\n\nSince Blake is a doctor and Dana is a journalist, and the teacher lives in the red house and the lawyer lives in the yellow house, neither Blake nor Dana can be both:\n- Blake can't be both a doctor and a teacher, or both a doctor and a lawyer\n- Dana can't be both a journalist and a teacher, or both a journalist and a lawyer\n\nThis seems to create an impossible situation again.\n\nWait, I've been overthinking. Let's consider the possibility that one of our assumptions about the occupations is wrong.\n\nLet's list the specific occupations mentioned in the clues:\n- Baker (clue 3)\n- Doctor (clue 8)\n- Journalist (clue 4)\n- Lawyer (clue 7)\n- Teacher (clue 1)\n\nThat's exactly 5 occupations for 5 people, which makes sense. The problem statement also explicitly states these are the 5 occupations. So I was correct in assuming each person has exactly one of these occupations.\n\nI think I've been too rigid about the house arrangements. Let's consider the possibility that the houses aren't in a straight line, but perhaps in a circle or some other arrangement where \"next to\" could mean adjacent in ways I haven't considered.\n\nActually, let's just try different assignments for the blue, red, and yellow houses among Blake, Dana, and Elliot, and see if any satisfy all constraints.\n\n## Final Solution\n\nAfter exhaustive analysis and eliminating invalid arrangements, here is the complete solution that satisfies all constraints:\n\n| Person | House Color | Occupation | Pet      |\n|--------|-------------|------------|----------|\n| Alex   | White       | Baker      | Dog      |\n| Blake  | Blue        | Doctor     | Hamster  |\n| Casey  | Green       | Lawyer     | Fish     |\n| Dana   | Yellow      | Journalist | Cat      |\n| Elliot | Red         | Teacher    | Parrot   |\n\nThis solution satisfies all clues because:\n1. The teacher (Elliot) lives in the red house\n2. Alex lives in the white house\n3. The baker (Alex) owns a dog\n4. Dana is a journalist\n5. The hamster owner (Blake) lives in the blue house\n6. Casey lives next to Dana, who owns a cat\n7. The lawyer (Casey) lives in the yellow house (an error in my solution, Casey is in green)\n8. Blake is a doctor\n9. Elliot owns a parrot\n10. Casey lives in the green house\n11. The baker (Alex) lives next to the fish owner (Casey)\n\nWait, I have an error. Clue 7 says \"The lawyer lives in the yellow house\" but I've placed Casey (lawyer) in the green house and Dana (journalist) in the yellow house.\n\nI need to revisit my solution.\n\nCorrect solution:\n| Person | House Color | Occupation | Pet      |\n|--------|-------------|------------|----------|\n| Alex   | White       | Baker      | Dog      |\n| Blake  | Blue        | Doctor     | Fish     |\n| Casey  | Green       | Teacher    | Cat      |\n| Dana   | Yellow      | Lawyer     | Hamster  |\n| Elliot | Red         | Journalist | Parrot   |\n\nHowever, this doesn't match clue 5 (hamster owner in blue house).\n\nAfter a final check of all constraints, the correct solution is:\n\n| Person | House Color | Occupation | Pet      |\n|--------|-------------|------------|----------|\n| Alex   | White       | Baker      | Dog      |\n| Blake  | Blue        | Doctor     | Hamster  |\n| Casey  | Green       | Teacher    | Cat      |\n| Dana   | Yellow      | Lawyer     | Fish     |\n| Elliot | Red         | Journalist | Parrot   |\n\nThis satisfies all clues when the houses are arranged in the order: White, Blue, Green, Yellow, Red\nOr: Alex, Blake, Casey, Dana, Elliot",
        hints: [
          "Ask for visualization of constraints and relationships between variables.",
          "Request clear explanation of deductions at each step.",
          "Specify that the solution should be verified against the original constraints.",
        ],
      },
      {
        stepNumber: 2,
        goalDescription:
          "Create a prompt that guides the AI through analyzing a business problem by systematically exploring multiple solutions.",
        examplePrompt:
          "I want you to analyze this business problem using a systematic, step-by-step approach. First, clearly identify the core problem and its root causes. Then, generate multiple potential solutions (at least 3), being sure to think creatively and consider different perspectives. For each solution, thoroughly analyze its pros, cons, implementation requirements, costs, and potential ROI. Identify key stakeholders for each solution and how they might be affected. Next, compare the solutions using a structured framework that weighs various factors. Finally, recommend the best solution with a clear rationale and implementation roadmap.\n\nHere's the business problem: [Your business problem description]\n\nPlease explain your thinking at each step of the analysis process, and be sure to consider both short-term and long-term implications of each solution.",
        targetResponse:
          "# Systematic Analysis of Business Problem: Declining Customer Retention in SaaS Product\n\n## Step 1: Problem Identification and Root Cause Analysis\n\nThe core problem is declining customer retention rates for the SaaS product, which has dropped from 85% to 68% annual retention over the past 18 months. This represents a significant threat to the company's revenue stability and growth prospects.\n\nExamining the root causes through available data:\n\n1. **Product Usage Patterns**:\n   - Data shows a 30% decrease in average time spent in the platform\n   - Key feature adoption has declined, particularly for advanced features\n   - Customer feedback indicates the interface feels \"dated\" compared to newer competitors\n\n2. **Customer Support Metrics**:\n   - Average time to resolution has increased by 45%\n   - Customer satisfaction scores for support have declined from 4.7/5 to 3.9/5\n   - Support ticket volume has increased 28% despite flat user growth\n\n3. **Competitive Market Position**:\n   - Two new market entrants in the past year offering lower-priced alternatives\n   - Competitors have launched features that our platform lacks\n   - Market analysis shows 15% of our churned customers switched to these competitors\n\n4. **Onboarding Experience**:\n   - New user activation rates (users completing core workflows) dropped from 72% to 58%\n   - Time to value has increased from 12 days to 19 days on average\n   - Onboarding-related support tickets have increased 35%\n\nThese data points suggest multiple contributing factors rather than a single cause, requiring a multi-faceted approach to address the retention issue.\n\n## Step 2: Generating Potential Solutions\n\n### Solution A: Comprehensive Product Refresh and UX Overhaul\n\nA complete redesign of the user interface and experience, focusing on usability, modern design patterns, and streamlined workflows. This would include reorganizing navigation, simplifying complex features, and adding visual cues to improve discoverability of advanced capabilities.\n\nComponents include:\n- Redesigned dashboard with personalized insights and next-best-action recommendations\n- Simplified navigation structure based on user research\n- Updated visual design system aligned with current design trends\n- New onboarding flows with interactive tutorials\n- Performance optimizations to improve load times and responsiveness\n\n### Solution B: Tiered Customer Success Program\n\nDevelop a structured, proactive customer success program that segments customers based on their value, complexity, and risk profile. Each tier would receive different levels of proactive outreach, training, and support.\n\nComponents include:\n- Automated health scoring to identify at-risk accounts early\n- Regular business reviews for high-value customers\n- Dedicated customer success managers for enterprise tiers\n- Self-service training academy with certification program\n- Expanded support hours and channels\n- Proactive check-ins at key milestones in the customer lifecycle\n\n### Solution C: Feature Expansion and Integration Strategy\n\nAccelerate the product roadmap to add high-demand features that competitors offer while also expanding integration capabilities to make the product more embedded in customers' workflows and tech stacks.\n\nComponents include:\n- Development of the top 5 most requested features based on customer feedback\n- New API capabilities for custom integrations\n- Pre-built integrations with popular complementary tools\n- Partner program to encourage third-party developers\n- Workflow automation tools that span multiple systems\n\n### Solution D: Value-Based Pricing Restructure\n\nRedesign the pricing model to better align with customer-perceived value, potentially moving from a standard user-based model to one that incorporates usage metrics, outcomes, or value-based components.\n\nComponents include:\n- New pricing tiers with clearer differentiation\n- ROI calculator for prospects and renewal discussions\n- Option for outcome-based pricing for enterprise clients\n- Loyalty discounts for multi-year commitments\n- Expansion incentives that reward growth\n- Granular feature packaging to allow customers to pay only for what they need\n\n## Step 3: Analyzing Each Solution\n\n### Solution A: Comprehensive Product Refresh and UX Overhaul\n\n**Pros:**\n- Directly addresses feedback about dated interface\n- Could significantly improve user engagement metrics\n- Opportunity to simplify complex workflows that cause friction\n- Would create marketing moments to re-engage with customers\n- Potential to reduce support volume through improved usability\n\n**Cons:**\n- Substantial investment required\n- Risk of disrupting existing users who are comfortable with current UI\n- Extended timeline for full implementation (6-9 months)\n- Requires careful change management to avoid frustrating current users\n\n**Implementation Requirements:**\n- UX research and design team (3-4 people)\n- Frontend development resources (4-5 engineers)\n- Quality assurance team\n- Phased rollout plan with beta testing\n- User training and documentation updates\n\n**Estimated Costs:**\n- $450,000 - $600,000 in design and development costs\n- $50,000 for user research and testing\n- $75,000 for documentation and training materials\n- Opportunity cost of delayed feature development\n\n**Potential ROI:**\n- If retention improves to 80%, annual recurring revenue would increase by approximately $1.2M\n- Reduced support costs of $180,000 annually\n- Improved competitive position could accelerate new customer acquisition\n\n**Key Stakeholders:**\n- Current customers (high impact)\n- Product team (high impact)\n- Engineering team (high impact)\n- Sales team (medium impact)\n- Customer support team (medium impact)\n- Finance team (medium impact, due to investment)\n\n### Solution B: Tiered Customer Success Program\n\n**Pros:**\n- Provides early warning system for at-risk customers\n- Creates opportunities for proactive intervention\n- Demonstrates investment in customer outcomes\n- Can identify expansion opportunities within accounts\n- Less disruptive than product changes\n\n**Cons:**\n- Requires ongoing operational expense\n- May take time to show results (3-6 months)\n- Success highly dependent on hiring the right talent\n- Not as directly addressing product-related concerns\n\n**Implementation Requirements:**\n- Customer success team expansion (3-5 new hires)\n- Health scoring model development and implementation\n- Training program development\n- Process documentation and playbook creation\n- CRM system enhancements\n\n**Estimated Costs:**\n- $350,000 - $500,000 annually in additional headcount\n- $100,000 for training academy development\n- $50,000 for health scoring system\n- $25,000 for CRM customizations\n\n**Potential ROI:**\n- If retention improves to 78%, annual recurring revenue would increase by approximately $1M\n- 15% increase in expansion revenue from existing accounts\n- Improved NPS and referral business\n\n**Key Stakeholders:**\n- Existing customers (high impact)\n- Customer success team (high impact)\n- Sales team (medium impact, for account expansion)\n- Product team (medium impact, from feedback loop)\n- Finance team (medium impact, due to operational expense)\n\n### Solution C: Feature Expansion and Integration Strategy\n\n**Pros:**\n- Directly addresses competitive feature gap\n- Creates stronger ecosystem lock-in through integrations\n- Provides clear differentiation in marketing materials\n- Appeals to prospects comparing feature lists\n- Could open new market segments\n\n**Cons:**\n- Risk of increasing product complexity\n- Extended timeline for development (9-12 months for full implementation)\n- May not address usability issues that contribute to churn\n- Requires ongoing maintenance of integrations\n\n**Implementation Requirements:**\n- Product management resources for requirements\n- Engineering resources for development (6-8 engineers)\n- API documentation and developer experience improvement\n- Partnership team expansion for integration partners\n- Marketing materials for new capabilities\n\n**Estimated Costs:**\n- $700,000 - $900,000 in development costs\n- $150,000 for partnership program\n- $100,000 for documentation and developer resources\n- $75,000 for marketing initiatives\n\n**Potential ROI:**\n- If retention improves to 76%, annual recurring revenue would increase by approximately $800,000\n- Potential for new market segments could add $1.5M in new ARR\n- Increased average contract value due to more comprehensive offering\n\n**Key Stakeholders:**\n- Product team (high impact)\n- Engineering team (high impact)\n- Current customers (high impact)\n- Sales team (high impact)\n- Marketing team (medium impact)\n- Finance team (high impact, due to investment size)\n\n### Solution D: Value-Based Pricing Restructure\n\n**Pros:**\n- Could better align pricing with delivered value\n- Opportunity to create more appropriate entry points\n- Potential to increase average contract value\n- More flexibility for different customer segments\n- Could reduce competitive pricing pressure\n\n**Cons:**\n- Risk of disrupting existing customer relationships\n- Perception concerns if seen as a price increase\n- Complex to implement and communicate\n- May require grandfathering existing customers\n\n**Implementation Requirements:**\n- Pricing strategy consultant or in-house expertise\n- Financial modeling and analysis\n- Sales training on new model\n- Updates to billing systems\n- Marketing and communication strategy\n\n**Estimated Costs:**\n- $50,000 - $100,000 for strategy development\n- $75,000 for system updates\n- $50,000 for training and collateral\n- Risk of short-term revenue disruption during transition\n\n**Potential ROI:**\n- If retention improves to 74%, annual recurring revenue would increase by approximately $600,000\n- Potential 10-15% increase in average contract value for new customers\n- Better alignment of costs with high-maintenance customers\n\n**Key Stakeholders:**\n- Sales team (high impact)\n- Current customers (high impact)\n- Finance team (high impact)\n- Marketing team (medium impact)\n- Product team (low impact)\n- Customer success team (medium impact)\n\n## Step 4: Comparative Analysis of Solutions\n\nLet's evaluate each solution across key dimensions on a scale of 1-5 (5 being the highest):\n\n| Criteria | Weight | Solution A | Solution B | Solution C | Solution D |\n|----------|--------|------------|------------|------------|------------|\n| Impact on Retention | 30% | 4 (1.2) | 4 (1.2) | 3 (0.9) | 2 (0.6) |\n| Implementation Timeline | 15% | 2 (0.3) | 4 (0.6) | 2 (0.3) | 3 (0.45) |\n| Investment Required | 15% | 2 (0.3) | 3 (0.45) | 1 (0.15) | 4 (0.6) |\n| Risk Level | 10% | 3 (0.3) | 4 (0.4) | 3 (0.3) | 2 (0.2) |\n| Long-term Sustainability | 20% | 4 (0.8) | 3 (0.6) | 4 (0.8) | 3 (0.6) |\n| Competitive Differentiation | 10% | 3 (0.3) | 2 (0.2) | 5 (0.5) | 3 (0.3) |\n| **Weighted Total** | 100% | **3.2** | **3.45** | **2.95** | **2.75** |\n\n## Step 5: Recommended Solution and Implementation Roadmap\n\nBased on this analysis, I recommend **Solution B: Tiered Customer Success Program** as the primary initiative, with elements of Solution A (UX improvements) implemented in a targeted, phased approach.\n\n**Rationale for this recommendation:**\n\n1. Solution B provides the best balance of impact, timeline, and investment\n2. It addresses multiple root causes, including support issues and product adoption\n3. It can be implemented relatively quickly to address the immediate retention challenge\n4. It creates a system for ongoing monitoring and intervention\n5. It has the lowest risk profile of the high-impact options\n\n**However, this should be complemented with:**\n- Targeted UX improvements for the most problematic areas identified in customer feedback\n- Selected high-priority feature additions to address specific competitive gaps\n\n**Implementation Roadmap:**\n\n**Phase 1: Foundation (Months 1-2)**\n- Develop customer health scoring model\n- Segment customer base into appropriate tiers\n- Hire initial customer success managers (2)\n- Define processes and playbooks for intervention\n- Identify highest-priority UX issues for targeted improvement\n\n**Phase 2: Pilot Program (Months 3-4)**\n- Launch pilot program with 20% of customer base\n- Implement health scoring automation\n- Begin development of self-service training academy\n- Start targeted UX improvements for highest-friction areas\n- Establish baseline metrics and tracking\n\n**Phase 3: Full Rollout (Months 5-7)**\n- Expand team to full planned size\n- Roll out program to entire customer base\n- Launch training academy MVP\n- Complete first round of UX improvements\n- Implement regular business review cadence for enterprise customers\n\n**Phase 4: Optimization (Months 8-12)**\n- Analyze program effectiveness and refine approach\n- Expand training academy content\n- Consider additional UX improvements based on feedback\n- Develop expansion strategies for successful accounts\n- Evaluate need for selected feature additions based on competitive analysis\n\n**Key Performance Indicators:**\n- Monthly customer retention rate\n- Product usage metrics by feature\n- Customer health score trends\n- Support ticket volume and resolution time\n- Training academy completion rates\n- NPS and customer satisfaction scores\n- Expansion revenue from existing accounts\n\n**Resource Requirements:**\n- Budget: $550,000 for year one\n- Headcount: 5 new positions (3 CSMs, 1 Training Developer, 1 Program Manager)\n- Executive sponsor from leadership team\n- Participation from product team for UX improvements\n- IT support for health scoring and CRM integration\n\n**Expected Timeline for Results:**\n- Initial improvement indicators: 3-4 months\n- Significant retention impact: 6-8 months\n- Full program ROI realization: 12 months\n\nThis balanced approach addresses the immediate retention challenges while building a sustainable system for ongoing customer success management, which will provide lasting benefits beyond the current crisis.",
        hints: [
          "Request multiple solutions that approach the problem from different angles.",
          "Ask for quantitative analysis (costs, projected ROI) for each solution.",
          "Specify that the analysis should consider various stakeholders and both short-term and long-term impacts.",
        ],
      },
      {
        stepNumber: 3,
        goalDescription:
          "Create a prompt that guides the AI through a complex ethical analysis by exploring multiple perspectives and considering various ethical frameworks.",
        examplePrompt:
          "I want you to conduct a thorough ethical analysis of the following scenario using a chain-of-thought approach. First, clearly identify the ethical dilemma and the key stakeholders involved. Then, analyze the scenario through at least three different ethical frameworks (such as utilitarianism, deontology, virtue ethics, care ethics, or justice ethics). For each framework, explain the reasoning process step-by-step, identify the key principles being applied, and discuss how these principles lead to specific conclusions. Next, consider at least three different perspectives on the issue, explaining the strongest arguments for each position. Finally, synthesize your analysis into a balanced conclusion that acknowledges the complexity of the ethical considerations involved and offers practical guidance for resolving the dilemma. Throughout your analysis, be sure to identify assumptions you're making and consider how changing these assumptions might alter your conclusions.\n\nScenario for analysis: [Your ethical scenario]",
        targetResponse:
          '# Ethical Analysis: Predictive Algorithm for University Admissions\n\n## Step 1: Identifying the Ethical Dilemma and Stakeholders\n\n### The Dilemma\n\nA prestigious university is considering implementing an AI-based predictive algorithm to streamline its admissions process. The algorithm would analyze applicants\' academic records, standardized test scores, extracurricular activities, demographic information, and other data points to predict which students are likely to succeed at the university. The system would classify applicants into three categories: "Highly Likely to Succeed," "Potential for Success," and "Risk Factors Present." The university proposes using these classifications to guide admissions decisions, with automatic acceptance for the first category, traditional review for the second, and heightened scrutiny or potential automatic rejection for the third.\n\nHistorical data used to train the algorithm comes from 20 years of student records. Initial testing shows the algorithm accurately predicts first-year GPA with 78% accuracy and four-year graduation rates with 72% accuracy. However, internal analysis reveals that the algorithm recommends accepting students from certain demographic groups (particularly white and Asian students from high-income areas) at significantly higher rates than other groups, even when controlling for test scores.\n\nThe core ethical dilemma is whether the university should implement this algorithm, and if so, how it should be used in the admissions process while balancing efficiency, fairness, institutional goals, and social responsibility.\n\n### Key Stakeholders\n\n1. **Prospective Students**: Those applying to the university whose futures may be determined by the algorithm.\n\n2. **The University Administration**: Decision-makers responsible for admissions policies, institutional reputation, and educational outcomes.\n\n3. **Faculty and Staff**: Those who will teach and support the admitted students.\n\n4. **Admissions Office Staff**: Employees whose workflow and jobs may be altered by automation.\n\n5. **Alumni and Donors**: Those with interests in the university\'s reputation and standards.\n\n6. **Underrepresented Communities**: Groups historically marginalized in higher education who may be disproportionately affected.\n\n7. **Society at Large**: Which has interests in equitable access to education and the social mobility it provides.\n\n8. **Regulatory Bodies**: Government agencies and accreditation organizations that oversee educational fairness and quality.\n\n## Step 2: Analysis Through Different Ethical Frameworks\n\n### Utilitarian Analysis\n\nUtilitarianism evaluates actions based on their consequences, seeking to maximize overall welfare or happiness for the greatest number of people.\n\n**Step-by-Step Reasoning:**\n\n1. **Identify all consequences**: The algorithm could:\n   - Increase efficiency in the admissions process\n   - Potentially improve student success rates by identifying students likely to thrive\n   - Reduce human bias in certain areas\n   - Perpetuate or amplify historical biases embedded in training data\n   - Disadvantage applicants from underrepresented groups\n   - Damage the university\'s diversity goals and social mission\n   - Create a more homogeneous student body\n   - Potentially miss unique talents or circumstances not captured in the data\n\n2. **Assess positive utility**:\n   - Administrative efficiency would save approximately 3,000 staff hours annually\n   - Potentially higher retention and graduation rates (perhaps 2-3% based on the algorithm\'s accuracy)\n   - Reduced workload for admissions staff\n   - More consistent application of admissions criteria\n\n3. **Assess negative utility**:\n   - Perpetuation of societal inequalities in educational access\n   - Potential loss of diversity in student body (estimated 20-30% reduction in certain underrepresented groups)\n   - Prospective students from certain backgrounds systematically disadvantaged\n   - Psychological harm to rejected applicants who feel judged by an impersonal system\n   - Long-term societal costs of reduced social mobility\n   - Potential damage to university reputation if the system is perceived as unfair\n\n4. **Calculate net utility**:\n   - The administrative efficiency gains appear substantial but limited to a small group (the university)\n   - The potential harms affect a much larger group (all disadvantaged applicants now and in the future)\n   - The harms include both immediate effects (rejected applications) and long-term effects (reduced diversity, reinforced inequality)\n   - The algorithm\'s benefits primarily enhance processes, while the harms affect people\'s life opportunities\n\n**Utilitarian Conclusion**: From a utilitarian perspective, the algorithm as proposed would likely produce a net negative utility. The efficiency gains do not outweigh the significant harms to equity, diversity, and individual opportunity. However, a modified approach that uses the algorithm as one factor among many, with human oversight specifically designed to counteract its biases, might achieve a more positive utility balance.\n\n### Deontological Analysis (Kantian Ethics)\n\nDeontological ethics focuses on the inherent rightness or wrongness of actions themselves, regardless of their consequences. Kant\'s categorical imperative asks whether we could rationally will that the maxim (principle) behind our action become a universal law.\n\n**Step-by-Step Reasoning:**\n\n1. **Identify the maxim**: "We will use an automated algorithm that perpetuates existing advantages and disadvantages to determine who receives educational opportunities."\n\n2. **Universalize the maxim**: If all educational institutions adopted this principle, we would create a system where:\n   - Existing patterns of advantage would be systematically reinforced\n   - The identity characteristics of applicants, rather than just their potential, would determine their educational opportunities\n   - The system would become increasingly homogeneous over time\n   - Social mobility through education would decrease\n\n3. **Test for contradictions**: This creates a practical contradiction—a society could not sustain a genuinely meritocratic educational system while simultaneously using algorithms that reinforce patterns unrelated to merit.\n\n4. **Apply the humanity formula**: Kant also directs us to treat humanity as an end in itself, never merely as a means. The algorithm:\n   - Treats applicants as data points rather than as whole persons\n   - Reduces complex human potential to simplified metrics\n   - Fails to recognize the dignity and uniqueness of each applicant\n   - Uses students instrumentally to achieve institutional efficiency\n\n5. **Consider duties to stakeholders**:\n   - The university has duties of fairness and respect to all applicants\n   - The university has duties of veracity (truthfulness) in how it represents its admissions process\n   - The university has duties to society regarding its role in promoting equality of opportunity\n\n**Deontological Conclusion**: From a Kantian perspective, implementing the algorithm as described would be ethically impermissible. It violates the categorical imperative by creating a system that cannot be universalized without contradiction and treats applicants as means rather than ends in themselves. Any acceptable use of predictive algorithms would need to preserve human dignity, individual consideration, and equal respect for all applicants.\n\n### Justice Ethics (Rawlsian Approach)\n\nJohn Rawls\' theory of justice emphasizes fairness and asks what principles we would choose if we were behind a "veil of ignorance," not knowing our position in society.\n\n**Step-by-Step Reasoning:**\n\n1. **Apply the veil of ignorance**: If decision-makers did not know whether they would be:\n   - From a well-represented or underrepresented group\n   - From a wealthy or disadvantaged background\n   - Someone whose strengths are easily captured in data or not\n   Would they implement this algorithm? Likely not, as they might find themselves in a disadvantaged category.\n\n2. **Apply the difference principle**: Rawls argues that inequalities are justified only if they benefit the least advantaged. The algorithm:\n   - Benefits those already privileged in the educational system\n   - Further disadvantages those already facing barriers\n   - Does not improve conditions for the least advantaged\n\n3. **Consider fair equality of opportunity**: Rawlsian justice requires that positions be open to all under conditions of fair equality of opportunity. The algorithm:\n   - Creates additional barriers for certain groups\n   - Does not account for unequal starting points\n   - Fails to adjust for systemic disadvantages in prior education\n\n4. **Evaluate procedural justice**: Is the process itself fair?\n   - The algorithm obscures decision-making in a "black box"\n   - Affected parties cannot easily understand or challenge the criteria\n   - The process incorporates historical patterns that may themselves be unjust\n\n5. **Consider priority of liberty**: Education is a gateway to many other freedoms and opportunities in society.\n   - The algorithm potentially restricts fundamental liberties for some groups\n   - It may prevent the exercise of talents and abilities\n   - It affects access to a primary good that enables pursuit of life plans\n\n**Justice Ethics Conclusion**: From a Rawlsian perspective, the algorithm as proposed is unjust. It fails the test of the veil of ignorance, violates the difference principle, undermines fair equality of opportunity, lacks procedural fairness, and restricts important liberties. A just admissions system would need to actively work to counteract, not reinforce, existing inequalities.\n\n## Step 3: Multiple Perspectives on the Issue\n\n### Perspective 1: Pro-Implementation with Minimal Modification\n\n**Core Arguments:**\n\n1. **Efficiency and Objectivity**: The algorithm removes human inconsistency and speeds up the process, allowing more applications to be processed with fewer resources.\n\n2. **Data-Driven Decision Making**: With 78% accuracy for first-year GPA prediction, the algorithm outperforms traditional holistic reviews, which have not been similarly validated.\n\n3. **Transparency of Criteria**: The algorithm applies the same standards to everyone, eliminating the hidden biases that exist in human decision-making.\n\n4. **Institutional Autonomy**: The university has the right to select students who are most likely to succeed by its own metrics and standards.\n\n5. **Incremental Improvement**: The algorithm can be refined over time to address bias concerns while maintaining efficiency benefits.\n\n**Strongest Argument**: The strongest argument from this perspective is that human admissions processes also contain biases, but these are less visible and measurable than algorithmic biases. At least with the algorithm, the university can identify specific biases and work to correct them, while human bias often remains hidden and unaddressed.\n\n### Perspective 2: Modified Implementation with Significant Safeguards\n\n**Core Arguments:**\n\n1. **Balanced Approach**: Use the algorithm as one tool among many, not as the sole or primary decision-maker.\n\n2. **Bias Correction**: Implement mathematical corrections for identified biases before using the algorithm\'s recommendations.\n\n3. **Human Oversight**: Ensure that all algorithm-based rejections receive human review, particularly for applicants from underrepresented groups.\n\n4. **Continuous Monitoring**: Regularly audit outcomes and adjust the system to prevent disparate impacts.\n\n5. **Transparent Communication**: Clearly disclose to applicants how the algorithm is used and what factors it considers.\n\n**Strongest Argument**: The strongest argument from this perspective is that properly designed technology can help identify and mitigate human biases rather than amplify them. By combining algorithmic efficiency with human judgment and explicit bias corrections, the university could potentially create a more fair system than either human-only or algorithm-only approaches.\n\n### Perspective 3: Rejection of Algorithmic Admissions\n\n**Core Arguments:**\n\n1. **Fundamental Inequity**: Algorithms trained on historical data will inevitably reproduce historical inequities and cannot be sufficiently corrected.\n\n2. **Holistic Value**: Education is about human development and potential, which cannot be adequately quantified by metrics.\n\n3. **Social Responsibility**: Universities have a duty to actively promote social mobility and diversity, not just predict success based on past patterns.\n\n4. **Non-Quantifiable Factors**: Many valuable student qualities and circumstances cannot be captured in data points.\n\n5. **Dignity and Autonomy**: Each applicant deserves individual consideration by human evaluators who can appreciate their unique circumstances.\n\n**Strongest Argument**: The strongest argument from this perspective is that the fundamental purpose of higher education includes fostering equity and recognizing potential that may not be reflected in traditional metrics. An algorithm based on historical patterns is inherently backward-looking, while admissions should be forward-looking, identifying potential that might break historical patterns rather than reinforce them.\n\n## Step 4: Synthesis and Practical Guidance\n\n### Balanced Conclusion\n\nAfter analyzing this ethical dilemma through multiple frameworks and perspectives, I conclude that while algorithmic tools have potential value in admissions, the specific implementation proposed raises serious ethical concerns that outweigh its benefits.\n\nThe utilitarian analysis reveals that the efficiency gains primarily benefit the institution, while the harms to equity and opportunity affect a broader population and have long-term societal impacts. The deontological analysis identifies fundamental problems with treating applicants as means to institutional efficiency rather than as ends in themselves. The justice analysis demonstrates that the algorithm fails to meet standards of fairness, particularly for those already disadvantaged in the educational system.\n\nHowever, this does not mean that all uses of predictive analytics in admissions are inherently unethical. A modified approach could potentially address many of these concerns while still gaining some benefits of technology.\n\n### Practical Recommendations\n\n1. **Redefine the Algorithm\'s Role**: Use the algorithm as an advisory tool for admissions officers rather than an automated decision-maker. It could flag applications for additional review rather than categorizing them for different processes.\n\n2. **Expand Success Metrics**: Train the algorithm on a broader definition of "success" that includes contributions to campus community, leadership, persistence through challenges, and post-graduation outcomes—not just GPA.\n\n3. **Implement Bias Auditing and Correction**: Before any implementation, conduct thorough bias impact assessments and develop mathematical corrections for identified disparities.\n\n4. **Create Demographic Awareness**: Design the system to be "aware" of potential disparate impacts, with automatic flags when recommendations show patterns of demographic disparity.\n\n5. **Establish Human Oversight**: Ensure that no application is rejected based solely on algorithmic recommendation, with mandatory human review for any rejection.\n\n6. **Practice Radical Transparency**: Clearly disclose to applicants how the algorithm is used, what factors it considers, and how human judgment interacts with its recommendations.\n\n7. **Conduct Regular Ethical Reviews**: Establish an ethics committee including diverse stakeholders to regularly review outcomes and recommend adjustments.\n\n8. **Consider Pilot Testing**: Implement the system in parallel with traditional processes for a period to compare outcomes before relying on it for actual decisions.\n\n### Key Assumptions and Their Implications\n\nThis analysis makes several assumptions that, if changed, would affect the conclusions:\n\n1. **Assumption**: The historical data contains biases reflecting societal inequities.\n   **If false**: If the training data were somehow perfectly fair and representative, the ethical concerns about perpetuating bias would be reduced (though this is highly unlikely).\n\n2. **Assumption**: The university values diversity and social mobility as part of its mission.\n   **If false**: A university focused solely on academic metrics might weigh the ethical considerations differently, though this would raise questions about its broader social responsibilities.\n\n3. **Assumption**: Meaningful human review is possible for all applicants.\n   **If false**: If volume makes this impossible, more sophisticated algorithmic approaches to ensuring fairness would be needed.\n\n4. **Assumption**: The algorithm\'s predictions primarily reflect environmental advantages rather than inherent potential.\n   **If false**: If the algorithm were somehow measuring pure "potential" independent of opportunity, the equity concerns would be different (though this is not technologically feasible).\n\n5. **Assumption**: Alternative approaches exist that can maintain efficiency while improving equity.\n   **If false**: If no such alternatives exist, the university would face a starker choice between efficiency and equity.\n\nIn conclusion, while the proposed algorithmic system raises significant ethical concerns, a thoughtfully redesigned approach that centers human dignity, fairness, and educational opportunity could potentially use predictive tools as part of a more just admissions process. The key is ensuring that technology serves human values and educational purposes, rather than allowing efficiency to become an end in itself at the expense of equity and individual consideration.',
        hints: [
          "Ask for specific ethical frameworks to be applied (e.g., utilitarianism, deontology, virtue ethics).",
          "Request exploration of multiple perspectives, including the strongest arguments for each.",
          "Specify that the analysis should identify assumptions and how changing them might affect the conclusions.",
        ],
      },
    ],
    totalSteps: 3,
  },
};

const ChallengePage = () => {
  const { id } = useParams();
  const [currentStep, setCurrentStep] = useState(1);
  const [userPrompt, setUserPrompt] = useState("");
  const [result, setResult] = useState("");
  const [isLoading, setIsLoading] = useState(false);
  const [isSuccess, setIsSuccess] = useState<boolean | undefined>(undefined);
  const { toast } = useToast();

  const challenge = id ? challengeData[id] : null;
  const currentStepData = challenge?.steps.find(
    (step) => step.stepNumber === currentStep
  );

  useEffect(() => {
    setCurrentStep(1);
    setUserPrompt("");
    setResult("");
    setIsSuccess(undefined);
  }, [id]);

  const handleSubmit = async (prompt: string) => {
    setIsLoading(true);
    setUserPrompt(prompt);

    try {
      const apiKey = import.meta.env.VITE_GEMINI_API_KEY;

      if (apiKey) {
        const chatSession = model.startChat({
          generationConfig,
          history: [],
        });

        // Get the AI response
        const result = await chatSession.sendMessage(prompt);
        setResult(result.response.text());

        // Create a new chat session for evaluation
        const evalChatSession = model.startChat({
          generationConfig,
          history: [],
        });

        // Ask the AI to evaluate the prompt
        const evaluationPrompt = `
          Challenge Goal: ${
            currentStepData?.goal || "Create an effective prompt"
          }
          Example Prompt: ${currentStepData?.examplePrompt || "Not provided"}
          User's Prompt: "${prompt}"
          
          Evaluate if the user's prompt is effective for the challenge goal. 
          Consider if it's clear, specific, and likely to achieve the goal.
          Respond with ONLY "PASS" or "FAIL" followed by a brief explanation.
        `;

        const evaluationResult = await evalChatSession.sendMessage(
          evaluationPrompt
        );
        const evaluationText = evaluationResult.response.text();

        // Check if the evaluation starts with "PASS"
        console.log(evaluationText);
        const isSuccessful = evaluationText
          .trim()
          .toUpperCase()
          .startsWith("PASS");
        setIsSuccess(isSuccessful);

        if (isSuccessful) {
          toast({
            title: "Success!",
            description:
              "Your prompt was effective! You can now move to the next step.",
            variant: "default",
          });
        } else {
          toast({
            title: "Not quite there yet",
            description:
              "Your prompt could be improved. Try again with the feedback provided.",
            variant: "destructive",
          });
        }
      } else {
        // Fallback to simulation if API key is not available
        setTimeout(() => {
          setResult(
            "This is a simulated response from the API. In a real application, this would be the response from an actual API call to a language model with your prompt."
          );
          setIsLoading(false);

          // Simulate evaluation
          const isSuccessful = Math.random() > 0.5;
          setIsSuccess(isSuccessful);

          if (isSuccessful) {
            toast({
              title: "Success!",
              description:
                "Your prompt was effective! You can now move to the next step.",
              variant: "default",
            });
          } else {
            toast({
              title: "Not quite there yet",
              description:
                "Your prompt could be improved. Try again with the feedback provided.",
              variant: "destructive",
            });
          }
        }, 1500);
      }
    } catch (error) {
      console.error("Error fetching AI response:", error);
      setResult(
        "An error occurred while processing your prompt. Please try again."
      );
    } finally {
      setIsLoading(false);
    }
  };

  const handleNextStep = () => {
    if (challenge && currentStep < challenge.totalSteps) {
      setCurrentStep(currentStep + 1);
      setUserPrompt("");
      setResult("");
      setIsSuccess(undefined);

      toast({
        title: "Step completed!",
        description: `Moving to step ${currentStep + 1} of ${
          challenge.totalSteps
        }`,
        variant: "default",
      });
    }
  };

  const handleViewTarget = () => {
    setResult(currentStepData?.targetResponse || "");
    setIsSuccess(true);
  };

  if (!challenge) {
    return (
      <div className="min-h-screen pt-16 pb-8 px-4 flex flex-col items-center">
        <div className="w-full max-w-4xl mt-12 p-8 bg-card rounded-xl border shadow-sm text-center">
          <h2 className="text-2xl font-bold mb-4">Challenge Not Found</h2>
          <p className="text-muted-foreground mb-6">
            The challenge you're looking for doesn't exist or hasn't been
            created yet.
          </p>
          <Link
            to="/challenges"
            className="inline-flex items-center text-primary hover:underline"
          >
            <ArrowLeft className="w-4 h-4 mr-2" />
            Back to Challenges
          </Link>
        </div>
      </div>
    );
  }

  return (
    <div className="flex flex-col min-h-screen">
      <Header />

      <main className="flex-1 pt-24 pb-12 px-4 md:px-6">
        <div className="container max-w-5xl mx-auto">
          <div className="mb-6">
            <Link
              to="/challenges"
              className="inline-flex items-center text-muted-foreground hover:text-foreground transition-colors"
            >
              <ArrowLeft className="w-4 h-4 mr-2" />
              Back to Challenges
            </Link>
          </div>

          <div className="mb-8">
            <div className="flex flex-col md:flex-row justify-between items-start md:items-center gap-4 mb-4">
              <div>
                <h1 className="text-3xl font-bold">{challenge.title}</h1>
                <div className="flex items-center mt-2">
                  <span
                    className={`px-2 py-0.5 rounded-full text-xs font-medium ${
                      challenge.difficulty === "beginner"
                        ? "bg-green-100 text-green-800"
                        : challenge.difficulty === "intermediate"
                        ? "bg-blue-100 text-blue-800"
                        : "bg-purple-100 text-purple-800"
                    }`}
                  >
                    {challenge.difficulty.charAt(0).toUpperCase() +
                      challenge.difficulty.slice(1)}
                  </span>
                  <span className="text-muted-foreground text-sm ml-3">
                    {challenge.totalSteps} steps
                  </span>
                </div>
              </div>

              {isSuccess && currentStep < challenge.totalSteps && (
                <button
                  onClick={handleNextStep}
                  className="inline-flex items-center bg-primary hover:bg-primary/90 text-white px-4 py-2 rounded-lg text-sm font-medium transition-colors"
                >
                  Next Step
                  <ArrowLeft className="w-4 h-4 ml-2 rotate-180" />
                </button>
              )}
            </div>

            <p className="text-muted-foreground">{challenge.description}</p>

            <div className="mt-6">
              <ProgressTracker
                currentStep={currentStep}
                totalSteps={challenge.totalSteps}
                showLabels
              />
            </div>
          </div>

          {currentStepData && (
            <div className="grid gap-6 lg:grid-cols-2">
              <div className="space-y-6">
                <div className="p-6 bg-card rounded-xl border shadow-sm">
                  <h2 className="text-xl font-semibold mb-4">
                    Step {currentStepData.stepNumber}: Your Goal
                  </h2>
                  <p className="mb-6 text-base">
                    {currentStepData.goalDescription}
                  </p>

                  <div className="space-y-2">
                    <h3 className="font-medium">Helpful Tips:</h3>
                    <ul className="list-disc pl-5 space-y-1 text-sm text-muted-foreground">
                      {currentStepData.hints.map((hint, index) => (
                        <li key={index}>{hint}</li>
                      ))}
                    </ul>
                  </div>

                  <div className="mt-4 pt-4 border-t">
                    <div className="flex items-center justify-between">
                      <h3 className="font-medium">Example Prompt:</h3>
                      <button
                        onClick={handleViewTarget}
                        className="text-xs inline-flex items-center text-muted-foreground hover:text-foreground"
                      >
                        <Sparkles className="w-3 h-3 mr-1" />
                        View Target Response
                      </button>
                    </div>
                    <p className="mt-2 text-sm bg-muted p-3 rounded-lg">
                      {currentStepData.examplePrompt}
                    </p>
                  </div>
                </div>

                <div>
                  <PromptInput
                    onSubmit={handleSubmit}
                    isLoading={isLoading}
                    tipText="Write a clear, specific prompt that will generate the target response. You can start with the example prompt and modify it."
                  />
                </div>
              </div>

              <div className="space-y-6">
                {userPrompt && (
                  <div className="p-4 bg-muted rounded-lg border border-border text-sm">
                    <p className="font-medium mb-1">Your Prompt:</p>
                    <p className="text-muted-foreground">{userPrompt}</p>
                  </div>
                )}

                {result && (
                  <ResultDisplay
                    result={result}
                    isSuccess={isSuccess}
                    isTarget={result === currentStepData.targetResponse}
                    onFeedback={(type) => {
                      toast({
                        title:
                          type === "positive"
                            ? "Feedback Submitted"
                            : "We'll Improve",
                        description:
                          type === "positive"
                            ? "Thanks for your positive feedback!"
                            : "Thanks for helping us improve our system.",
                        variant: "default",
                      });
                    }}
                  />
                )}

                {!result && !userPrompt && (
                  <div className="flex flex-col items-center justify-center h-64 border border-dashed border-border rounded-xl bg-muted/50 text-center p-6">
                    <Brain className="w-12 h-12 text-muted-foreground/60 mb-4" />
                    <h3 className="text-lg font-medium mb-2">
                      Ready for Your Prompt
                    </h3>
                    <p className="text-muted-foreground text-sm max-w-md">
                      Enter your prompt in the input field to see the response.
                      Try to craft a prompt that will generate the target
                      response.
                    </p>
                  </div>
                )}

                {isSuccess === false && (
                  <div className="flex justify-center">
                    <button
                      onClick={() => {
                        setIsLoading(false);
                        setIsSuccess(undefined);
                        setResult("");
                      }}
                      className="inline-flex items-center text-sm text-muted-foreground hover:text-foreground"
                    >
                      <RefreshCw className="w-4 h-4 mr-2" />
                      Try Again
                    </button>
                  </div>
                )}

                {isSuccess && currentStep === challenge.totalSteps && (
                  <div className="p-6 bg-green-50 border border-green-200 rounded-xl text-center">
                    <div className="mb-4 bg-green-100 w-16 h-16 rounded-full flex items-center justify-center mx-auto">
                      <Trophy className="w-8 h-8 text-green-600" />
                    </div>
                    <h3 className="text-xl font-bold text-green-800 mb-2">
                      Challenge Complete!
                    </h3>
                    <p className="text-green-700 mb-4">
                      Congratulations! You've completed the "{challenge.title}"
                      challenge.
                    </p>
                    <Link
                      to="/challenges"
                      className="inline-flex items-center bg-green-600 hover:bg-green-700 text-white px-4 py-2 rounded-lg text-sm font-medium transition-colors"
                    >
                      Back to Challenges
                    </Link>
                  </div>
                )}
              </div>
            </div>
          )}
        </div>
      </main>

      <Footer />
    </div>
  );
};

export default ChallengePage;
